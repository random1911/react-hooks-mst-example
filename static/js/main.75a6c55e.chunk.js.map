{"version":3,"sources":["../node_modules/validatorjs/src/lang sync /^/.//.*$","store/WarningModel.ts","utils/index.ts","components/Modal/ModalHeader.tsx","components/Modal/Modal.tsx","components/Avatar/Avatar.tsx","components/Button/Button.tsx","components/Spinner/Spinner.tsx","components/LoaderOverlay/LoaderOverlay.tsx","components/PersonDetailsModal/PersonDetailsModal.tsx","components/TextField/TextField.tsx","components/Dropdown/DropdownDrop.tsx","components/Dropdown/Dropdown.tsx","components/Dropdown/DropdownToggleButton.tsx","components/MatchedSearch/MatchedSearch.tsx","components/Dropdown/SelectOption.tsx","components/Dropdown/SearchBar.tsx","components/Dropdown/SelectDrop.tsx","components/Dropdown/Select.tsx","components/ContactField/ContactFieldRow.tsx","components/ContactField/ContactField.tsx","components/SelectField/SelectField.tsx","components/EditPersonModal/EditPersonModal.tsx","store/apiRequest.ts","store/Person.ts","store/Pagination.ts","store/Input.ts","store/ContactModel.ts","store/Notification.ts","store/EditPerson.ts","store/PeopleList.ts","store/Modal.ts","store/storeContext.ts","components/WarningModal/WarningModal.tsx","store/Ui.ts","store/OrganizationsList.ts","store/main.ts","components/Header/Header.tsx","components/Footer/Footer.tsx","components/PeopleListItem/PeopleListItem.tsx","components/Pagination/PaginationButton.tsx","components/Pagination/Pagination.tsx","components/ToolbarSearch/ToobarSearch.tsx","components/PeopleListView/ListView.tsx","components/PeopleListView/PeopleListView.tsx","components/TopLevelModals/TopLevelModals.tsx","components/NotificationsContainer/Notification.tsx","components/NotificationsContainer/NotificationsContainer.tsx","App.tsx","index.tsx"],"names":["map","./ar","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cy","./cy.js","./da","./da.js","./de","./de.js","./el","./el.js","./en","./en.js","./es","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fr","./fr.js","./hr","./hr.js","./hu","./hu.js","./id","./id.js","./it","./it.js","./ja","./ja.js","./ka","./ka.js","./ko","./ko.js","./lt","./lt.js","./lv","./lv.js","./mk","./mk.js","./mn","./mn.js","./ms","./ms.js","./nb_NO","./nb_NO.js","./nl","./nl.js","./pl","./pl.js","./pt","./pt.js","./pt_BR","./pt_BR.js","./ro","./ro.js","./ru","./ru.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr.js","./sv","./sv.js","./tr","./tr.js","./ua","./ua.js","./uk","./uk.js","./vi","./vi.js","./zh","./zh.js","./zh_TW","./zh_TW.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","WARNING_ACTIONS","capitalize","str","charAt","toUpperCase","slice","camelToDash","replace","g","concat","toLowerCase","formatKeys","data","value","getFromApi","arguments","length","undefined","build","Array","isArray","innerData","forEach","key","destKey","split","part","i","join","item","console","error","isNumber","Number","isNaN","parseFloat","formatParams","params","filter","formattedKey","param","string","encodeURIComponent","getBemClassName","baseClass","modifiers","modifiersString","trim","searchStringIgnoreCase","substr","source","RegExp","test","ModalHeader","_ref","_ref$caption","caption","onCloseClick","react_default","a","createElement","className","title","onClick","Modal","hideHeader","_ref$isOpen","isOpen","isTopLevel","closeFunction","children","isClosing","shouldReactOnEsc","handleEscPress","stopPropagation","useEffect","document","addEventListener","removeEventListener","template","es2015","AutoFocusInside","Modal_ModalHeader","modalRoot","getElementById","createPortal","observer","_ref2","openOnInit","customCloseFunction","ui","useStore","addModal","removeModal","getModal","openModal","closeModal","modal","Modal_Modal","memo","imageUrl","name","isLarge","_useState","useState","_useState2","slicedToArray","isLoaded","setLoaded","onLoad","_name$split","_name$split2","firstName","lastName","getInitials","src","alt","Button","_ref$type","type","icon","primary","isPending","disabled","collapsible","onlyIcon","role","Spinner","small","LoaderOverlay","components_Spinner_Spinner","PersonDetailModal","avatarUrl","phone","email","organization","assistant","groups","location","additionalEmails","additionalPhones","onEditClick","onDeleteClick","pendingDelete","incompleteData","existingAdditionalDetails","label","handleClose","components_Modal_Modal","components_LoaderOverlay_LoaderOverlay","components_Avatar_Avatar","react","components_Button_Button","peopleList","selectedPerson","_peopleList$selectedP","pictureUrl","primaryEmail","primaryPhone","closeDetails","editPerson","askForDeleteCurrentPerson","PersonDetailsModal_PersonDetailModal","TextInput","readonly","onChange","onFocus","onBlur","isInvalid","_ref$autoComplete","autoComplete","cssModifiers","autofocus","placeholder","element","useRef","current","focus","ref","readOnly","getModifiers","TextField","inputProps","objectWithoutProperties","haveError","htmlFor","TextField_TextInput","assign","DropdownDrop","closeCallback","onOpen","onClose","_ref$params","left","top","node","style","setStyle","_useState3","_useState4","isAbove","setAbove","handleOutSideClick","target","targetNode","parentNode","parentElement","body","isElementInsideParent","setStyles","minWidth","height","realMinWidth","realLeft","parentTop","parentHeight","_window","window","innerHeight","pageYOffset","nodeHeight","offsetHeight","dropHeight","shouldDropToUp","objectSpread","maxHeight","getVerticalStyles","dropdownWidth","offsetWidth","computedLeft","screenWidth","innerWidth","overflow","newParams","handleOverWidth","dropdownRoot","container","ReactDOM","events","Dropdown","_ref$closeTimeout","closeTimeout","withTranslate","selected","onSelect","toggleButton","toggleButtonText","fullWidth","options","allowSearch","headElement","setOpen","setClosing","_useState5","_useState6","dropdownPosition","setDropdownPosition","scrollParent","toggleButtonElement","resizeTimeout","preventScroll","preventDefault","getPositionProps","rect","getBoundingClientRect","Math","round","open","close","setTimeout","handleResize","clearTimeout","currentNode","classList","contains","detectScrollParent","buttonInside","querySelector","detectToggleButtonElement","parent","event","disableScrollOnParent","enableScrollOnParent","props","text","fillParent","React","cloneElement","renderToggleButton","Dropdown_DropdownDrop","renderChildren","isError","MatchedSearch","query","matchedClassName","matchedAt","search","begin","matched","end","NotFoundOption","MenuOption","isSelected","shouldAutofocus","buttonElement","onMouseEnter","components_MatchedSearch_MatchedSearch","SearchBar","onClear","onInputFocus","onInputBlur","SelectDrop","_ref$options","setQuery","isSearchInFocus","setSearchFocusState","queryComplete","filteredOptions","option","nothingFound","Dropdown_SearchBar","SelectOption","SelectOption_NotFoundOption","Select","components_Dropdown_Dropdown","selectedItem","find","getSelectedName","Dropdown_DropdownToggleButton","Dropdown_SelectDrop","SelectController","_useStore$ui","onDropdownOpen","onDropdownClose","combinedProps","Select_Select","ContactFieldRow","onValueChange","onLabelChange","labelOptions","isSingle","onRemove","inputId","Dropdown_Select","fieldLabel","addListItem","removeListItem","list","ContactField_ContactFieldRow","SelectField","EditPersonModal","nameError","onNameChange","organizationOptions","onOrganizationChange","onGroupsChange","onAssistantChange","onSubmit","emailFieldLabel","emailList","addEmail","removeEmail","emailLabelOptions","singleEmail","phoneFieldLabel","phoneList","phoneLabelOptions","addPhone","removePhone","singlePhone","components_TextField_TextField","components_SelectField_SelectField","components_ContactField_ContactField","submit","emails","phones","EditPersonModal_EditPersonModal","formattedLabelOptions","apiRequest","asyncToGenerator","regenerator_default","mark","_callee","endpoint","_ref$method","method","signal","fetchOptions","paramsString","fullEndPoint","wrap","_context","prev","next","process","mode","cache","headers","Content-Type","JSON","stringify","fetch","abrupt","sent","stop","_x","apply","this","OrganizationInfo","types","model","maybe","address","Contact","getPrimaryContact","getAdditionalContacts","notMain","Person","identifier","orderingId","number","organizationInfo","optional","array","views","self","store","getRoot","searchQuery","validSearch","haveValidSearch","actions","requestDetails","flow","response","json","_formatKeys","ok","updateSelf","snapshot","applySnapshot","loadMissedData","_callee2","fullData","_context2","setSelected","showPersonDetails","hidePeronDetailsDialog","openEditPersonModal","Pagination","limit","currentPage","getParent","total","totalCount","pagesCount","ceil","currentStartIndex","onTheFirstPage","onTheLastPage","currentMaxCount","goToPage","pageId","setCurrentPage","start","getFromCache","getList","goToPrev","rules","tel","Input","customRules","inputType","enumeration","isDirty","setValue","setError","validate","validation","Validator","defineProperty","isValid","passes","errors","first","reset","ContactItem","identifierNumber","toLocaleLowerCase","setDirty","ContactModel","counter","push","filtered","every","getValue","toJSON","_ref3","index","NOTIFICATION_TYPES","WarningModel","confirmText","cancelText","confirmAction","cancelAction","hideWarningDialog","closeEditPersonModal","deleteCurrentPerson","_callee3","_context3","handleAction","action","DELETE_CURRENT_PERSON","CLOSE_EDIT_PERSON_FORM","PHONE_LABELS","EMAIL_LABELS","CONTACTS_KEYS","ALL_FIELDS_KEYS","nameInput","emailModel","phoneModel","DEFAULT_ORG_OPTION","EditPerson","isEditMode","validationKeys","inputKeys","isClear","some","shouldBlockClose","toConsumableArray","organizationsList","setContact","setPendingStatus","status","input","getFieldValues","_self$store$peopleLis","updateSelectedPerson","createNewPerson","setValues","values","setPhones","setEmails","warning","showWarningDialog","showCloseWarning","ListCache","content","updateList","PeopleList","defaultCaption","addLabel","searchResult","isLoadingList","isLoadingAdditionalItems","reference","pagination","fragment","currentListFragment","totalSearchResult","allItems","flat","isEmpty","shouldAddToEnd","allItemsByQuery","itemsByQueryIds","canFillCurrentFragment","getListController","searchListController","handleSearchTimeout","setTotalCount","count","setLoadingListState","newState","setLoadingAdditionalItemsState","addListCache","setCache","getListData","from","_args2","abort","AbortController","t0","addErrorNotification","listData","persons","_args3","clearNextPages","pagesToSave","page","clearLastPage","notLastPages","changeSinglePersonInList","person","addSinglePersonToList","newList","log","getSinglePerson","_callee4","res","_context4","requestPersonChange","_callee5","isEdit","formattedBody","_context5","_callee6","_context6","destroy","setPendingDelete","sendDeletePersonRequest","personId","_callee7","_filtered","_context7","setSearchResults","addSuccessNotification","_callee8","_context8","_callee9","_context9","result","onlyNewItems","includes","sendSearchRequest","_callee10","_context10","skip","setSearchQuery","requestClearList","_callee11","_context11","reloadList","_callee12","_context12","clearWholeList","_callee13","_context13","requestRestoreDefault","_callee14","_context14","restoreDefaultData","_callee15","_context15","afterAttach","onDragEnd","sourceIndex","destinationIndex","minIndex","min","maxIndex","max","listStart","listEnd","affectedArea","prevValidOrderId","targetItem","pop","_affectedArea","_affectedArea2","toArray","rest","timeout","newOrder","sendReorderRequest","setSelectedPerson","_self$selectedPerson","snap","getSnapshot","setEditPersonModel","clearSearchQuery","performSearch","_callee16","_context16","handleSearchInputChange","_this","topModalId","dropdownIsOpen","delayedClose","Promise","StoresContext","Notification","ERROR","SUCCESS","isHidden","autoClose","destroyNotification","afterCreate","WarningModal","onConfirm","onCancel","_ref$confirmText","_ref$cancelText","WarningModal_WarningModal","Ui","modals","notifications","openedModals","notificationsCount","haveOpenedPopups","getNotification","notification","disableBodyScroll","add","enableBodyScroll","remove","unregisterOpenedModal","updated","registerOpenedModal","addNotification","cleared","cast","setWarning","Organization","OrganizationsList","setList","requestList","sort","Store","useContext","Header","href","Footer","handleClick","handleSpacePress","react_beautiful_dnd_esm","draggableId","provided","isDragging","innerRef","draggableProps","dragHandleProps","isOnly","PaginationButton","isActive","isNext","isPrev","isArrow","onPaginationClick","prevDisabled","nextDisabled","pages","Pagination_PaginationButton","ToolbarSearch","onSearchInputChange","onSearchClear","onReset","List","components_PeopleListItem_PeopleListItem","ListView","onAddClick","isSearchMode","ToobarSearch","components_Pagination_Pagination","_ref4","destination","droppableId","droppableProps","PeopleListView_ListView","TopLevelModals","PersonDetailsModal","components_EditPersonModal_EditPersonModal","components_WarningModal_WarningModal","NotificationContainer","NotificationsContainer_Notification","root","App","components_Header_Header","components_PeopleListView_PeopleListView","components_Footer_Footer","components_TopLevelModals_TopLevelModals","NotificationsContainer","create","createContext","createStore","render","src_App"],"mappings":"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","file":"static/js/main.75a6c55e.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 45,\n\t\"./ar.js\": 45,\n\t\"./az\": 46,\n\t\"./az.js\": 46,\n\t\"./be\": 47,\n\t\"./be.js\": 47,\n\t\"./bg\": 48,\n\t\"./bg.js\": 48,\n\t\"./bs\": 49,\n\t\"./bs.js\": 49,\n\t\"./ca\": 50,\n\t\"./ca.js\": 50,\n\t\"./cs\": 51,\n\t\"./cs.js\": 51,\n\t\"./cy\": 52,\n\t\"./cy.js\": 52,\n\t\"./da\": 53,\n\t\"./da.js\": 53,\n\t\"./de\": 54,\n\t\"./de.js\": 54,\n\t\"./el\": 55,\n\t\"./el.js\": 55,\n\t\"./en\": 33,\n\t\"./en.js\": 33,\n\t\"./es\": 56,\n\t\"./es.js\": 56,\n\t\"./et\": 57,\n\t\"./et.js\": 57,\n\t\"./eu\": 58,\n\t\"./eu.js\": 58,\n\t\"./fa\": 59,\n\t\"./fa.js\": 59,\n\t\"./fi\": 60,\n\t\"./fi.js\": 60,\n\t\"./fr\": 61,\n\t\"./fr.js\": 61,\n\t\"./hr\": 62,\n\t\"./hr.js\": 62,\n\t\"./hu\": 63,\n\t\"./hu.js\": 63,\n\t\"./id\": 64,\n\t\"./id.js\": 64,\n\t\"./it\": 65,\n\t\"./it.js\": 65,\n\t\"./ja\": 66,\n\t\"./ja.js\": 66,\n\t\"./ka\": 67,\n\t\"./ka.js\": 67,\n\t\"./ko\": 68,\n\t\"./ko.js\": 68,\n\t\"./lt\": 69,\n\t\"./lt.js\": 69,\n\t\"./lv\": 70,\n\t\"./lv.js\": 70,\n\t\"./mk\": 71,\n\t\"./mk.js\": 71,\n\t\"./mn\": 72,\n\t\"./mn.js\": 72,\n\t\"./ms\": 73,\n\t\"./ms.js\": 73,\n\t\"./nb_NO\": 74,\n\t\"./nb_NO.js\": 74,\n\t\"./nl\": 75,\n\t\"./nl.js\": 75,\n\t\"./pl\": 76,\n\t\"./pl.js\": 76,\n\t\"./pt\": 77,\n\t\"./pt.js\": 77,\n\t\"./pt_BR\": 78,\n\t\"./pt_BR.js\": 78,\n\t\"./ro\": 79,\n\t\"./ro.js\": 79,\n\t\"./ru\": 80,\n\t\"./ru.js\": 80,\n\t\"./sl\": 81,\n\t\"./sl.js\": 81,\n\t\"./sq\": 82,\n\t\"./sq.js\": 82,\n\t\"./sr\": 83,\n\t\"./sr.js\": 83,\n\t\"./sv\": 84,\n\t\"./sv.js\": 84,\n\t\"./tr\": 85,\n\t\"./tr.js\": 85,\n\t\"./ua\": 86,\n\t\"./ua.js\": 86,\n\t\"./uk\": 87,\n\t\"./uk.js\": 87,\n\t\"./vi\": 88,\n\t\"./vi.js\": 88,\n\t\"./zh\": 89,\n\t\"./zh.js\": 89,\n\t\"./zh_TW\": 90,\n\t\"./zh_TW.js\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 130;","import {\n  types,\n  Instance,\n  getParent,\n  SnapshotIn,\n  getRoot,\n  flow\n} from \"mobx-state-tree\";\nimport { IUi } from \"./Ui\";\nimport { IStore } from \"./main\";\n\nexport enum WARNING_ACTIONS {\n  DELETE_CURRENT_PERSON = \"deleteCurrentPerson\",\n  CLOSE_EDIT_PERSON_FORM = \"closeEditPersonForm\"\n}\n\nconst WarningModel = types\n  .model(\"WarningModel\", {\n    text: types.maybe(types.string),\n    confirmText: types.maybe(types.string),\n    cancelText: types.maybe(types.string),\n    confirmAction: types.maybe(types.string),\n    cancelAction: types.maybe(types.string)\n  })\n  .views(self => ({\n    get store(): IStore {\n      return getRoot(self);\n    },\n    get ui(): IUi {\n      return getParent(self, 1);\n    }\n  }))\n  .actions(self => {\n    const close = flow(function*(): any {\n      yield self.ui.hideWarningDialog();\n    });\n    const closeEditPersonModal = flow(function*(): any {\n      yield close();\n      self.store.peopleList.closeEditPersonModal();\n    });\n    const deleteCurrentPerson = flow(function*(): any {\n      yield close();\n      self.store.peopleList.deleteCurrentPerson();\n    });\n    const handleAction = (action?: string) => {\n      switch (action) {\n        case WARNING_ACTIONS.DELETE_CURRENT_PERSON:\n          return deleteCurrentPerson();\n        case WARNING_ACTIONS.CLOSE_EDIT_PERSON_FORM:\n          return closeEditPersonModal();\n        default:\n          return close();\n      }\n    };\n    return {\n      handleAction\n    };\n  });\n\nexport interface IWarningModel extends Instance<typeof WarningModel> {}\nexport interface IWarningModelSnapshotIn\n  extends SnapshotIn<typeof WarningModel> {}\nexport default WarningModel;\n","export const capitalize = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const dashToCamel = (str: string) => {\n  if (str[0] === \"_\") return str;\n  return str\n    .split(\"_\")\n    .map((part, i) => (i === 0 ? part : capitalize(part)))\n    .join(\"\");\n};\n\nexport const camelToDash = (str: string) =>\n  str.replace(/([A-Z])/g, g => {\n    return `_${g[0].toLowerCase()}`;\n  });\n\nexport const formatKeys = (data: any, getFromApi: boolean = true): any => {\n  let value;\n  const build: any = {};\n  if (Array.isArray(data))\n    return data.map(innerData => formatKeys(innerData, getFromApi));\n  if (typeof data === \"string\" || typeof data === \"number\" || data === null)\n    return data;\n\n  Object.keys(data).forEach(key => {\n    try {\n      const destKey = getFromApi ? dashToCamel(key) : camelToDash(key);\n      value = data[key];\n      if (Array.isArray(value)) {\n        value = value.map(item => formatKeys(item, getFromApi));\n      } else if (typeof value === \"object\" && value !== null) {\n        value = formatKeys(value, getFromApi);\n      }\n      build[destKey] = value === null ? undefined : value;\n    } catch (e) {\n      console.error(e, data);\n    }\n  });\n\n  return build;\n};\n\nexport const isNumber = (value: any) => !Number.isNaN(parseFloat(value));\n\nexport const jsonCopy = (src: any) => {\n  return JSON.parse(JSON.stringify(src));\n};\n\nexport const formatParams = (params: any) => {\n  return Object.keys(params)\n    .filter(key => params[key] !== undefined)\n    .map(key => {\n      const formattedKey = camelToDash(key);\n      const param = params[key];\n      return Array.isArray(param)\n        ? `${param\n            .map(string => `${encodeURIComponent(formattedKey)}[]=${string}`)\n            .join(\"&\")}`\n        : `${encodeURIComponent(formattedKey)}=${encodeURIComponent(param)}`;\n    })\n    .join(\"&\");\n};\n\nexport const getBemClassName = (baseClass: string, modifiers: any = {}) => {\n  const keys: string[] = Object.keys(modifiers);\n  const existingModifiers = keys.filter(key => modifiers[key]);\n  const modifiersString = existingModifiers\n    .map(item => `${baseClass}_${camelToDash(item)}`)\n    .join(\" \");\n  return `${baseClass} ${modifiersString}`.trim();\n};\n\nexport const isElementInsideParent = (\n  targetNode: HTMLElement,\n  parentNode: HTMLElement\n) => {\n  if (targetNode === parentNode) {\n    return true;\n  }\n  while (targetNode.parentElement && targetNode !== document.body) {\n    targetNode = targetNode.parentElement;\n    if (targetNode === parentNode) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const searchStringIgnoreCase = (substr: string, source: string) => {\n  if (!substr) return false;\n  const re = new RegExp(substr, \"i\");\n  return re.test(source);\n};\n\nexport const renameCustomKeysFromApi = (responseBody: any, customKeys: any) => {\n  const copy = { ...responseBody };\n  const keys: string[] = Object.keys(customKeys);\n  keys.forEach(key => {\n    copy[key] = copy[customKeys[key]];\n  });\n  return copy;\n};\n\nexport const renameCustomKeysToApi = (requestBody: any, customKeys: any) => {\n  const copy = { ...requestBody };\n  const keys: string[] = Object.keys(customKeys);\n  keys.forEach(key => {\n    const value = copy[key];\n    delete copy[key];\n    copy[customKeys[key]] = value;\n  });\n  return copy;\n};\n","import React, { FC } from \"react\";\nimport \"./modal.scss\";\n\ninterface IProps {\n  onCloseClick: () => void;\n  caption?: string;\n}\n\nconst ModalHeader: FC<IProps> = ({ caption = \"\", onCloseClick }) => (\n  <header className=\"modal-header\">\n    <h3 className=\"modal-header__caption\">{caption}</h3>\n    <button\n      className=\"modal-header__close-button\"\n      title=\"Close\"\n      onClick={onCloseClick}\n    />\n  </header>\n);\n\nexport default ModalHeader;\n","import React, { FC, ReactNode, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport FocusLock, { AutoFocusInside } from \"react-focus-lock\";\nimport { observer } from \"mobx-react\";\nimport { getBemClassName } from \"../../utils\";\nimport { useStore } from \"../../store/storeContext\";\nimport \"./modal.scss\";\nimport ModalHeader from \"./ModalHeader\";\nconst ROOT_ID = \"modal-root\";\n\ninterface IProps {\n  hideHeader?: boolean;\n  caption?: string;\n  isTopLevel?: boolean;\n  isOpen?: boolean;\n  children: ReactNode;\n  isClosing?: boolean;\n  closeFunction: () => void;\n  shouldReactOnEsc?: boolean;\n}\n\nexport const Modal: FC<IProps> = ({\n  hideHeader,\n  isOpen = false,\n  isTopLevel,\n  closeFunction,\n  children,\n  caption,\n  isClosing,\n  shouldReactOnEsc\n}) => {\n  const handleEscPress = (e: KeyboardEvent) => {\n    if (e.key !== \"Escape\") return;\n    e.stopPropagation();\n    closeFunction();\n  };\n  useEffect(() => {\n    shouldReactOnEsc && document.addEventListener(\"keydown\", handleEscPress);\n    !shouldReactOnEsc &&\n      document.removeEventListener(\"keydown\", handleEscPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscPress);\n    };\n  }, [shouldReactOnEsc]); // eslint-disable-line\n  const template = (\n    <FocusLock>\n      <AutoFocusInside>\n        <div className=\"modal-holder\">\n          {isTopLevel && (\n            <div className=\"modal-overlay\" onClick={closeFunction} />\n          )}\n          <div className={getBemClassName(\"modal\", { isClosing })}>\n            {!hideHeader && (\n              <ModalHeader caption={caption} onCloseClick={closeFunction} />\n            )}\n            {children}\n          </div>\n        </div>\n      </AutoFocusInside>\n    </FocusLock>\n  );\n  const modalRoot = document.getElementById(ROOT_ID);\n  if (!modalRoot || !isOpen) return null;\n  return createPortal(template, modalRoot);\n};\n\ninterface IController {\n  hideHeader?: boolean;\n  id: string;\n  openOnInit?: boolean;\n  caption?: string;\n  children: ReactNode;\n  customCloseFunction?: () => void;\n}\n\nconst ModalController: FC<IController> = ({\n  hideHeader,\n  id,\n  caption,\n  children,\n  openOnInit,\n  customCloseFunction\n}) => {\n  const { ui } = useStore();\n  const { addModal, removeModal, getModal, openModal, closeModal } = ui;\n  const handleClose = () => {\n    customCloseFunction ? customCloseFunction() : closeModal(id);\n  };\n  useEffect(() => {\n    addModal(id);\n    openOnInit && openModal(id);\n    return () => {\n      removeModal(id);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  const modal = getModal(id);\n  if (!modal || !modal.isOpen) return null;\n  return (\n    <Modal\n      hideHeader={hideHeader}\n      caption={caption}\n      isClosing={modal.isClosing}\n      isOpen={modal.isOpen}\n      closeFunction={handleClose}\n      isTopLevel={modal.isTopLevel}\n      shouldReactOnEsc={modal.shouldReactOnEsc}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport default observer(ModalController);\n","import React, { FC, memo, useState } from \"react\";\nimport { getBemClassName } from \"../../utils\";\nimport \"./avatar.scss\";\n\ninterface IProps {\n  imageUrl?: string;\n  name: string;\n  isLarge?: boolean;\n}\n\nconst Avatar: FC<IProps> = ({ imageUrl, name, isLarge }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const getInitials = () => {\n    const [firstName, lastName] = name.split(\" \");\n    return `${firstName[0]}${lastName ? lastName[0] : \"\"}`.toUpperCase();\n  };\n  const onLoad = () => {\n    setLoaded(true);\n  };\n  const renderImage = () => {\n    if (!imageUrl) return null;\n    return (\n      <img\n        onLoad={onLoad}\n        className={getBemClassName(\"avatar__image\", { isLoaded, isLarge })}\n        src={imageUrl}\n        alt={name}\n      />\n    );\n  };\n  return (\n    <div className={getBemClassName(\"avatar\", { isLarge })}>\n      <div className=\"avatar__letters\">{getInitials()}</div>\n      {renderImage()}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import React, { FC } from \"react\";\nimport { getBemClassName } from \"../../utils\";\nimport \"./button.scss\";\n\ninterface IProps {\n  type?: \"button\" | \"submit\" | \"reset\";\n  onClick?: () => void;\n  icon?: string;\n  children?: string;\n  disabled?: boolean;\n  title?: string;\n  isPending?: boolean;\n  primary?: boolean;\n  collapsible?: boolean;\n}\n\nconst Button: FC<IProps> = ({\n  type = \"button\",\n  onClick,\n  icon,\n  primary,\n  isPending,\n  disabled,\n  children,\n  title,\n  collapsible\n}) => {\n  const onlyIcon = icon && !children;\n  const handleClick = () => {\n    onClick && onClick();\n  };\n  return (\n    <button\n      type={type}\n      onClick={handleClick}\n      title={title}\n      disabled={disabled || isPending}\n      className={getBemClassName(\"button\", {\n        isPending,\n        primary,\n        onlyIcon,\n        collapsible\n      })}\n    >\n      {icon && (\n        <span role=\"img\" className={`button__icon button__icon_${icon}`} />\n      )}\n      {children && <span className=\"button__text\">{children}</span>}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { FC } from \"react\";\nimport \"./spinner.scss\";\n\ninterface IProps {\n  small?: boolean;\n}\n\nconst Spinner: FC<IProps> = ({ small }) => (\n  <div className={`spinner${small ? \" spinner_small\" : \"\"}`}>\n    <div className=\"visually-hidden\">Loading...</div>\n  </div>\n);\n\nexport default Spinner;\n","import React, { FC } from \"react\";\nimport \"./loaderOverlay.scss\";\nimport Spinner from \"../Spinner/Spinner\";\n\nconst LoaderOverlay: FC = () => (\n  <div className=\"loader-overlay\">\n    <Spinner />\n  </div>\n);\n\nexport default LoaderOverlay;\n","import React, { FC, Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStore } from \"../../store/storeContext\";\nimport Modal from \"../Modal/Modal\";\nimport Avatar from \"../Avatar/Avatar\";\nimport Button from \"../Button/Button\";\nimport \"./personDetailModal.scss\";\nimport LoaderOverlay from \"../LoaderOverlay/LoaderOverlay\";\n\ninterface IProps {\n  name: string;\n  avatarUrl?: string;\n  phone?: string;\n  email?: string;\n  organization?: string;\n  assistant?: string;\n  groups?: string;\n  location?: string;\n  additionalEmails?: string;\n  additionalPhones?: string;\n  onCloseClick: () => void;\n  onEditClick: () => void;\n  onDeleteClick: () => void;\n  pendingDelete?: boolean;\n  incompleteData?: boolean;\n}\ninterface IRow {\n  label: string;\n  value?: string;\n}\n\nexport const PERSON_DETAILS_MODAL_ID = \"personDetails\";\n\nexport const PersonDetailModal: FC<IProps> = ({\n  name,\n  avatarUrl,\n  phone,\n  email,\n  organization,\n  assistant,\n  groups,\n  location,\n  additionalEmails,\n  additionalPhones,\n  onCloseClick,\n  onEditClick,\n  onDeleteClick,\n  pendingDelete,\n  incompleteData\n}) => {\n  const additionalDetails: IRow[] = [\n    { label: \"Email\", value: email },\n    { label: \"Organization\", value: organization },\n    { label: \"Assistant\", value: assistant },\n    { label: \"Groups\", value: groups },\n    { label: \"Location\", value: location },\n    { label: \"Additional emails\", value: additionalEmails },\n    { label: \"Additional phones\", value: additionalPhones }\n  ];\n  const existingAdditionalDetails: IRow[] = additionalDetails.filter(\n    item => item.value\n  );\n  const renderRow = ({ label, value }: IRow) => (\n    <Fragment key={label}>\n      <dt className=\"person-additional-details__label\">{label}</dt>\n      <dd className=\"person-additional-details__value\">{value}</dd>\n    </Fragment>\n  );\n  const handleClose = () => {\n    !pendingDelete && onCloseClick();\n  };\n  return (\n    <Modal\n      openOnInit\n      id={PERSON_DETAILS_MODAL_ID}\n      caption=\"Person Information\"\n      customCloseFunction={handleClose}\n    >\n      <div className=\"modal-content\">\n        {incompleteData && <LoaderOverlay />}\n        <section className=\"person-details\">\n          <header className=\"person-details__top\">\n            <Avatar isLarge name={name} imageUrl={avatarUrl} />\n            <h4 className=\"person-details__name\">{name}</h4>\n            {phone && <p className=\"person-details__phone\">{phone}</p>}\n          </header>\n          <div className=\"person-details__bottom\">\n            <dl className=\"person-additional-details\">\n              {existingAdditionalDetails.map(renderRow)}\n            </dl>\n          </div>\n        </section>\n      </div>\n      <div className=\"modal-footer\">\n        <div className=\"modal-footer__left\">\n          <Button\n            icon=\"delete\"\n            title=\"Delete\"\n            isPending={pendingDelete}\n            disabled={incompleteData}\n            onClick={onDeleteClick}\n          />\n        </div>\n        <div className=\"modal-footer__right\">\n          <Button\n            primary\n            disabled={pendingDelete || incompleteData}\n            onClick={onEditClick}\n          >\n            Edit\n          </Button>\n          <Button disabled={pendingDelete} onClick={handleClose}>\n            Back\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nconst PersonDetailModalController: FC = () => {\n  const { peopleList } = useStore();\n  if (!peopleList.selectedPerson) return null;\n  const {\n    name,\n    pictureUrl,\n    primaryEmail,\n    primaryPhone,\n    assistant,\n    organization,\n    location,\n    groups,\n    additionalEmails,\n    additionalPhones,\n    closeDetails,\n    editPerson,\n    askForDeleteCurrentPerson,\n    pendingDelete,\n    incompleteData\n  } = peopleList.selectedPerson;\n  return (\n    <PersonDetailModal\n      name={name}\n      location={location}\n      assistant={assistant}\n      email={primaryEmail}\n      organization={organization}\n      avatarUrl={pictureUrl}\n      groups={groups}\n      phone={primaryPhone}\n      additionalEmails={additionalEmails}\n      additionalPhones={additionalPhones}\n      onCloseClick={closeDetails}\n      onEditClick={editPerson}\n      onDeleteClick={askForDeleteCurrentPerson}\n      pendingDelete={pendingDelete}\n      incompleteData={incompleteData}\n    />\n  );\n};\n\nexport default observer(PersonDetailModalController);\n","import React, { ChangeEvent, FC, useEffect, useRef } from \"react\";\nimport { getBemClassName } from \"../../utils\";\nimport \"./textField.scss\";\n\nexport interface ITextInput {\n  id: string;\n  type?: string;\n  value?: string;\n  disabled?: boolean;\n  readonly?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  autoComplete?: \"on\" | \"off\";\n  cssModifiers?: string | string[];\n  autofocus?: boolean;\n  placeholder?: string;\n}\n\nexport const TextInput: FC<ITextInput & { isInvalid?: boolean }> = ({\n  id,\n  type = \"text\",\n  value,\n  disabled,\n  readonly,\n  onChange,\n  onFocus,\n  onBlur,\n  isInvalid,\n  autoComplete = \"off\",\n  cssModifiers,\n  autofocus,\n  placeholder\n}) => {\n  const element = useRef<HTMLInputElement | null>(null);\n  useEffect(() => {\n    if (autofocus) {\n      element && element.current && element.current.focus();\n    }\n  }, []); //eslint-disable-line\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n  };\n  const handleBlur = () => {\n    onBlur && onBlur();\n  };\n  const handleFocus = () => {\n    onFocus && onFocus();\n  };\n  const getModifiers = () => {\n    const modifiers: any = { isInvalid };\n    if (!cssModifiers) return modifiers;\n    const keys = Array.isArray(cssModifiers) ? cssModifiers : [cssModifiers];\n    keys.forEach(item => {\n      modifiers[item] = true;\n    });\n    return modifiers;\n  };\n  return (\n    <input\n      ref={element}\n      id={id}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      type={type}\n      value={value}\n      disabled={disabled}\n      readOnly={readonly}\n      className={getBemClassName(\"text-input\", getModifiers())}\n      autoComplete={autoComplete}\n      placeholder={placeholder}\n    />\n  );\n};\n\ninterface ITextField extends ITextInput {\n  label?: string;\n  error?: string;\n}\n\nconst TextField: FC<ITextField> = ({ label, error, id, ...inputProps }) => {\n  const haveError = !!error;\n  return (\n    <div className=\"text-field\">\n      {label && (\n        <label className=\"text-field__label\" htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <div className=\"text-field__input\">\n        <TextInput id={id} {...inputProps} isInvalid={haveError} />\n      </div>\n      {error && <p className=\"text-field__error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default TextField;\n","import React, { FC, ReactNode, useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FocusLock, { AutoFocusInside } from \"react-focus-lock\";\nimport { getBemClassName, isElementInsideParent, isNumber } from \"../../utils\";\nimport \"./dropdown.scss\";\n\nexport interface IDropdownDrop {\n  closeCallback?: () => void;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport interface IDropStyleParams {\n  minWidth?: number;\n  height?: number;\n  top?: number;\n  left?: number;\n}\ninterface IProps {\n  children?: ReactNode;\n  params?: IDropStyleParams;\n}\n\nconst DropdownDrop: FC<IProps & IDropdownDrop> = ({\n  children,\n  closeCallback,\n  onOpen,\n  onClose,\n  params = { left: 0, top: 0 }\n}) => {\n  const node = useRef<HTMLDivElement>(null);\n  const [style, setStyle] = useState({});\n  const [isAbove, setAbove] = useState(false);\n  const handleClose = () => {\n    closeCallback && closeCallback();\n  };\n  const handleEscPress = (e: KeyboardEvent) => {\n    if (e.key !== \"Escape\") return;\n    e.stopPropagation();\n    e.key === \"Escape\" && handleClose();\n  };\n  const handleOutSideClick = (e: Event) => {\n    if (!node || !node.current || !e.target) return;\n    if (!isElementInsideParent(e.target as HTMLElement, node.current)) {\n      handleClose();\n    }\n  };\n  const setStyles = (params: IDropStyleParams) => {\n    if (!params) return;\n    const { minWidth, top, left, height } = params;\n    const realMinWidth = isNumber(minWidth) ? `${minWidth}px` : 0;\n    const realLeft = isNumber(left) ? `${left}px` : \"auto\";\n\n    const parentTop = isNumber(top) ? top : 0;\n    const parentHeight = isNumber(height) ? height : 0;\n    const { innerHeight, pageYOffset } = window;\n    const nodeHeight = node.current && node.current.offsetHeight;\n    const dropHeight = nodeHeight && isNumber(nodeHeight) ? nodeHeight : 0;\n\n    const bottomOffset = innerHeight - (parentTop || 0);\n    const shouldDropToUp = bottomOffset <= innerHeight / 3;\n    setAbove(shouldDropToUp);\n    const getVerticalStyles = () => {\n      if (!shouldDropToUp) {\n        // drop to bottom - under the head\n        const realTop = `${(parentTop || 0) +\n          (parentHeight || 0) +\n          pageYOffset -\n          1}px`;\n        const maxHeight = `${innerHeight -\n          (parentHeight || 0) -\n          (parentTop || 0)}px`;\n        return {\n          top: realTop,\n          maxHeight\n        };\n      }\n      // drop to top - above the head\n      const canFit = dropHeight <= (parentTop || 0);\n      if (!canFit) {\n        // drop is bigger than space between top edge and head - so it will take all place\n        const realTop = `${pageYOffset}px`;\n        const maxHeight = parentTop ? `${parentTop + 1}px` : 0;\n        return {\n          top: realTop,\n          maxHeight\n        };\n      }\n      // drop is less than space between top edge and head\n      const maxHeight = `${dropHeight}px`;\n      const realTop = `${(parentTop || 0) + pageYOffset - dropHeight + 1}px`;\n      return {\n        top: realTop,\n        maxHeight\n      };\n    };\n    const style = {\n      minWidth: realMinWidth,\n      left: realLeft,\n      ...getVerticalStyles()\n    };\n    setStyle(style);\n  };\n  const onMount = () => {\n    document.body.addEventListener(\"click\", handleOutSideClick);\n    onOpen && onOpen();\n    document.addEventListener(\"keydown\", handleEscPress);\n  };\n  const onUnmount = () => {\n    document.body.removeEventListener(\"click\", handleOutSideClick);\n    document.removeEventListener(\"keydown\", handleEscPress);\n    onClose && onClose();\n  };\n  const handleOverWidth = () => {\n    if (!node.current) return;\n    const dropdownWidth = node.current.offsetWidth;\n    const computedLeft = isNumber(params.left) ? params.left : 0;\n    const screenWidth = window.innerWidth;\n    if (!dropdownWidth || !computedLeft) return;\n    const overflow = dropdownWidth + computedLeft - screenWidth;\n    if (overflow > 0) {\n      const left = Number(params.left) - overflow;\n      const newParams = { ...params, left };\n      setStyles(newParams);\n    }\n  };\n  useEffect(() => {\n    onMount();\n    return () => {\n      onUnmount();\n    };\n  }, []); // eslint-disable-line\n  useEffect(() => {\n    setStyles(params);\n    handleOverWidth();\n  }, [params]); // eslint-disable-line\n  const dropdownRoot = document.getElementById(\"dropdown-root\");\n  if (!dropdownRoot) return null;\n  const container = (\n    <FocusLock>\n      <AutoFocusInside>\n        <div\n          className={getBemClassName(\"dropdown-drop-wrapper\", { isAbove })}\n          ref={node}\n          style={style}\n        >\n          {children}\n        </div>\n      </AutoFocusInside>\n    </FocusLock>\n  );\n  return ReactDOM.createPortal(container, dropdownRoot);\n};\n\nexport default DropdownDrop;\n","import React, {\n  FC,\n  Fragment,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\n\nimport DropdownDrop, { IDropdownDrop } from \"./DropdownDrop\";\nimport \"./dropdown.scss\";\nimport { getBemClassName } from \"../../utils\";\n\nexport interface IOption {\n  value?: string | number;\n  label?: string;\n  disabled?: boolean;\n}\n\nexport interface IDropdown {\n  closeTimeout?: number;\n  children: ReactElement;\n  toggleButton: ReactElement;\n  withTranslate?: boolean;\n  selected?: string | number;\n  onSelect?: (value: string) => void;\n  fullWidth?: boolean;\n  toggleButtonText?: string;\n  options?: IOption[];\n  allowSearch?: boolean;\n  label?: string;\n  disabled?: boolean;\n  small?: boolean;\n  haveError?: boolean;\n}\n\nconst events = [\"mousewheel\", \"scroll\", \"touchmove\"];\n\nconst Dropdown: FC<IDropdown & IDropdownDrop> = ({\n  closeTimeout = 100,\n  withTranslate,\n  selected,\n  children,\n  onSelect,\n  toggleButton,\n  toggleButtonText,\n  fullWidth,\n  options,\n  onOpen,\n  onClose,\n  allowSearch,\n  label,\n  disabled,\n  small,\n  haveError\n}) => {\n  const headElement = useRef<HTMLDivElement>(null);\n  const [isOpen, setOpen] = useState(false);\n  const [isClosing, setClosing] = useState(false);\n  const [dropdownPosition, setDropdownPosition] = useState({});\n  const scrollParent = useRef<HTMLElement | null>(null);\n  const toggleButtonElement = useRef<HTMLElement | null>(null);\n  let resizeTimeout: number | null = null;\n\n  const preventScroll = (e: Event) => {\n    e.preventDefault();\n  };\n  const disableScrollOnParent = () => {\n    const parent = scrollParent && scrollParent.current;\n    if (parent) {\n      events.forEach(event => {\n        parent.addEventListener(event, preventScroll);\n      });\n    }\n  };\n  const enableScrollOnParent = () => {\n    const parent = scrollParent && scrollParent.current;\n    if (parent) {\n      events.forEach(event => {\n        parent.removeEventListener(event, preventScroll);\n      });\n    }\n  };\n  const detectScrollParent = (currentNode: HTMLElement | null) => {\n    const customScrollClass = \"modal-content\";\n    const modalId = \"modal-root\";\n    if (!currentNode) return;\n    while (currentNode.parentElement && currentNode !== document.body) {\n      currentNode = currentNode.parentElement;\n      if (\n        currentNode.classList.contains(customScrollClass) ||\n        (currentNode.id && currentNode.id === modalId)\n      ) {\n        scrollParent.current = currentNode;\n        return;\n      }\n    }\n  };\n  const detectToggleButtonElement = () => {\n    if (toggleButtonElement && toggleButtonElement.current) return;\n    if (!headElement.current) return;\n    const buttonInside = headElement.current.querySelector(\"button\");\n    if (buttonInside) {\n      toggleButtonElement.current = buttonInside;\n    }\n  };\n  const getPositionProps = () => {\n    const node = headElement.current;\n    if (!node) return {};\n    const rect = node.getBoundingClientRect();\n    return {\n      minWidth: node.offsetWidth,\n      height: node.offsetHeight,\n      top: rect.top,\n      left: Math.round(rect.left)\n    };\n  };\n  const open = () => {\n    if (isClosing) return;\n    setOpen(true);\n    setDropdownPosition(getPositionProps());\n  };\n  const close = () => {\n    setOpen(false);\n    setClosing(true);\n    setTimeout(() => {\n      if (toggleButtonElement && toggleButtonElement.current) {\n        toggleButtonElement.current.focus();\n      }\n      setClosing(false);\n    }, closeTimeout);\n  };\n  const handleResize = () => {\n    if (isOpen) {\n      resizeTimeout && clearTimeout(resizeTimeout);\n      resizeTimeout = window.setTimeout(() => {\n        setDropdownPosition(getPositionProps());\n      }, 300);\n    }\n  };\n  const startHandleResize = () => {\n    window.addEventListener(\"resize\", handleResize);\n  };\n  const endHandleResize = () => {\n    window.removeEventListener(\"resize\", handleResize);\n  };\n  useEffect(() => {\n    !scrollParent.current && detectScrollParent(headElement.current);\n    startHandleResize();\n    if (isOpen) {\n      detectToggleButtonElement();\n      disableScrollOnParent();\n    }\n    return () => {\n      enableScrollOnParent();\n      endHandleResize();\n    };\n  }, [isOpen]); // eslint-disable-line\n  const renderChildren = () => {\n    const props = {\n      withTranslate,\n      options,\n      onSelect,\n      selected,\n      closeCallback: close,\n      allowSearch,\n      small\n    };\n    return React.cloneElement(children, props);\n  };\n  const renderToggleButton = () => {\n    const props = {\n      withTranslate,\n      text: toggleButtonText,\n      fillParent: !!fullWidth,\n      isOpen,\n      label,\n      disabled,\n      small,\n      haveError,\n      onClick: open\n    };\n    return React.cloneElement(toggleButton, props);\n  };\n  return (\n    <Fragment>\n      <div\n        className={getBemClassName(\"dropdown-button-container\", { fullWidth })}\n        ref={headElement}\n      >\n        {renderToggleButton()}\n      </div>\n      {isOpen && (\n        <DropdownDrop\n          onClose={onClose}\n          onOpen={onOpen}\n          closeCallback={close}\n          params={dropdownPosition}\n        >\n          {renderChildren()}\n        </DropdownDrop>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Dropdown;\n","import React, { FC } from \"react\";\nimport \"./dropdown.scss\";\nimport { getBemClassName } from \"../../utils\";\n\ninterface IProps {\n  text?: string;\n  fullWidth?: boolean;\n  onClick?: () => void;\n  isOpen?: boolean;\n  disabled?: boolean;\n  haveError?: boolean;\n}\n\nconst DropdownToggleButton: FC<IProps> = ({\n  text,\n  isOpen,\n  onClick,\n  disabled,\n  haveError,\n  fullWidth\n}) => (\n  <button\n    className={getBemClassName(\"dropdown-toggle-button\", {\n      isOpen,\n      isError: haveError,\n      fullWidth\n    })}\n    disabled={disabled}\n    onClick={onClick}\n    type=\"button\"\n  >\n    <span className=\"dropdown-toggle-button__text\">{text}</span>\n    <span\n      className={getBemClassName(\"dropdown-toggle-button__arrow\", { isOpen })}\n    />\n  </button>\n);\n\nexport default React.memo(DropdownToggleButton);\n","import React, { FC, Fragment } from \"react\";\nimport { searchStringIgnoreCase } from \"../../utils\";\n\ninterface IProps {\n  query?: string;\n  value: string;\n  matchedClassName?: string;\n}\n\nconst MatchedSearch: FC<IProps> = ({ query, value, matchedClassName }) => {\n  if (!query) return <Fragment>{value}</Fragment>;\n  const matchedSearch = query && searchStringIgnoreCase(query, value);\n  if (matchedSearch) {\n    const matchedAt = value.toLowerCase().search(query.toLowerCase());\n    const begin = value.slice(0, matchedAt);\n    const matched = value.slice(matchedAt, matchedAt + query.length);\n    const end = value.slice(matchedAt + matched.length, value.length);\n    return (\n      <Fragment>\n        {begin}\n        <span className={matchedClassName}>{matched}</span>\n        {end}\n      </Fragment>\n    );\n  }\n  return <Fragment>{value}</Fragment>;\n};\n\nexport default MatchedSearch;\n","import React, { FC, useRef } from \"react\";\nimport { getBemClassName } from \"../../utils\";\nimport MatchedSearch from \"../MatchedSearch/MatchedSearch\";\nimport { IOption } from \"./Dropdown\";\nimport \"./dropdown.scss\";\n\ninterface IMenuOptionProps {\n  onClick?: (value?: string | number) => void;\n  isSelected?: boolean;\n  search?: string;\n  onFocus?: () => void;\n  shouldAutofocus?: boolean;\n}\n\nconst MenuOption: FC<IMenuOptionProps & IOption> = ({\n  onClick,\n  value,\n  label,\n  disabled,\n  isSelected,\n  search,\n  shouldAutofocus\n}) => {\n  const buttonElement = useRef<HTMLButtonElement | null>(null);\n  const handleClick = () => {\n    onClick && onClick(value);\n  };\n  const onMouseEnter = () => {\n    if (shouldAutofocus && buttonElement && buttonElement.current) {\n      buttonElement.current.focus();\n    }\n  };\n  return (\n    <li className=\"select-option\">\n      <button\n        ref={buttonElement}\n        onMouseEnter={onMouseEnter}\n        className={getBemClassName(\"select-option__button\", { isSelected })}\n        onClick={handleClick}\n        disabled={disabled}\n      >\n        <MatchedSearch\n          value={label || \"\"}\n          query={search}\n          matchedClassName=\"select-option__match\"\n        />\n      </button>\n    </li>\n  );\n};\n\nexport const NotFoundOption: FC = () => (\n  <li className=\"select-option\">\n    <div className=\"select-option__button_not_found\">Nothing found</div>\n  </li>\n);\n\nexport default MenuOption;\n","import React, { FC, ChangeEvent } from \"react\";\nimport \"./dropdown.scss\";\n\ninterface IProps {\n  value?: string;\n  onClear?: () => void;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onInputFocus: () => void;\n  onInputBlur: () => void;\n}\n\nconst SearchBar: FC<IProps> = ({\n  value,\n  onChange,\n  onClear,\n  onInputFocus,\n  onInputBlur\n}) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n  };\n  const handleClear = () => {\n    onClear && onClear();\n  };\n  return (\n    <div className=\"dropdown-search\">\n      <input\n        className=\"dropdown-search__input\"\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Search\"\n        onFocus={onInputFocus}\n        onBlur={onInputBlur}\n      />\n      {value && (\n        <button\n          className=\"dropdown-search__clear\"\n          type=\"button\"\n          onClick={handleClear}\n          title=\"Clear\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { FC, SyntheticEvent, useState } from \"react\";\nimport { searchStringIgnoreCase } from \"../../utils\";\nimport { IOption } from \"./Dropdown\";\nimport SelectOption, { NotFoundOption } from \"./SelectOption\";\nimport SearchBar from \"./SearchBar\";\n\ninterface IProps {\n  options?: IOption[];\n  closeCallback?: () => void;\n  onSelect?: (value: number | string) => void;\n  selected?: string | number;\n  allowSearch?: boolean;\n}\n\nconst SelectDrop: FC<IProps> = ({\n  closeCallback,\n  options = [],\n  onSelect,\n  selected,\n  allowSearch\n}) => {\n  const [query, setQuery] = useState(\"\");\n  const [isSearchInFocus, setSearchFocusState] = useState(false);\n  const handleSearchFocus = () => {\n    setSearchFocusState(true);\n  };\n  const handleSearchBlur = () => {\n    setSearchFocusState(false);\n  };\n  const onInput = (e: SyntheticEvent) => {\n    const { value } = e.target as HTMLInputElement;\n    setQuery(value);\n  };\n  const clear = () => setQuery(\"\");\n  const queryComplete = query.length > 2;\n  const filteredOptions = !queryComplete\n    ? options\n    : options.filter(option =>\n        searchStringIgnoreCase(query, option.label || \"\")\n      );\n  const nothingFound = queryComplete && !filteredOptions.length;\n  const renderItems = (item: IOption) => {\n    const { label, disabled, value } = item;\n    const handleClick = () => {\n      onSelect && typeof value !== \"undefined\" && onSelect(value);\n      closeCallback && closeCallback();\n    };\n    const isSelected = value === selected;\n    return (\n      <SelectOption\n        search={queryComplete ? query : undefined}\n        key={value}\n        onClick={handleClick}\n        value={value}\n        label={label}\n        isSelected={isSelected}\n        disabled={disabled}\n        shouldAutofocus={!isSearchInFocus}\n      />\n    );\n  };\n  return (\n    <div className=\"dropdown-select\">\n      {allowSearch && (\n        <SearchBar\n          onClear={clear}\n          onChange={onInput}\n          value={query}\n          onInputFocus={handleSearchFocus}\n          onInputBlur={handleSearchBlur}\n        />\n      )}\n      <ul className=\"dropdown-select__list\">\n        {filteredOptions && filteredOptions.map(renderItems)}\n        {nothingFound && <NotFoundOption />}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectDrop;\n","import React, { FC } from \"react\";\nimport { useStore } from \"../../store/storeContext\";\n\nimport Dropdown, { IOption } from \"./Dropdown\";\nimport { IDropdownDrop } from \"./DropdownDrop\";\nimport DropdownToggleButton from \"./DropdownToggleButton\";\nimport SelectDrop from \"./SelectDrop\";\n\ninterface IProps {\n  closeTimeout?: number;\n  selected: string | number;\n  onSelect?: (value: string) => void;\n  fullWidth?: boolean;\n  options: IOption[];\n  allowSearch?: boolean;\n  disabled?: boolean;\n  haveError?: boolean;\n}\n\nexport const Select: FC<IProps & IDropdownDrop> = props => {\n  const getSelectedName = () => {\n    const { options, selected } = props;\n    const selectedItem = options.find(item => item.value === selected);\n    return selectedItem && selectedItem.label;\n  };\n  return (\n    <Dropdown\n      toggleButtonText={getSelectedName()}\n      {...props}\n      toggleButton={<DropdownToggleButton />}\n    >\n      <SelectDrop />\n    </Dropdown>\n  );\n};\n\nconst SelectController: FC<IProps> = props => {\n  const {\n    ui: { onDropdownOpen, onDropdownClose }\n  } = useStore();\n  const combinedProps = {\n    onOpen: onDropdownOpen,\n    onClose: onDropdownClose,\n    ...props\n  };\n  return <Select {...combinedProps} />;\n};\n\nexport default SelectController;\n","import React, { FC, ChangeEvent } from \"react\";\nimport { TextInput } from \"../TextField/TextField\";\nimport Select from \"../Dropdown/Select\";\nimport \"./contactField.scss\";\nimport { IOption } from \"../Dropdown/Dropdown\";\n\nexport interface IContactFieldRow {\n  id: number;\n  type: string;\n  value?: string;\n  error?: string;\n  onValueChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  isSingle?: boolean;\n  onRemove: (id: number) => void;\n  label: string;\n  onLabelChange?: (value: string) => void;\n  labelOptions: IOption[];\n}\n\nconst ContactFieldRow: FC<IContactFieldRow> = ({\n  id,\n  value,\n  error,\n  onValueChange,\n  type,\n  label,\n  onLabelChange,\n  labelOptions,\n  isSingle,\n  onRemove\n}) => {\n  const haveError = !!error;\n  const handleRemove = () => {\n    onRemove(id);\n  };\n  const inputId = `${type}${id}`;\n  return (\n    <div className=\"contact-field-row\">\n      <div className=\"contact-field-row__inner\">\n        <TextInput\n          id={inputId}\n          value={value}\n          isInvalid={haveError}\n          onChange={onValueChange}\n          type={type}\n        />\n        <Select\n          selected={label}\n          options={labelOptions}\n          onSelect={onLabelChange}\n        />\n        {!isSingle && (\n          <button\n            type=\"button\"\n            onClick={handleRemove}\n            className=\"contact-field-row__remove\"\n            title=\"Remove\"\n          />\n        )}\n      </div>\n      {error && <p className=\"contact-field-row__error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default ContactFieldRow;\n","import React, { FC } from \"react\";\nimport { observer } from \"mobx-react\";\nimport \"./contactField.scss\";\nimport ContactFieldRow, { IContactFieldRow } from \"./ContactFieldRow\";\nimport { IOption } from \"../Dropdown/Dropdown\";\n\ninterface IProps {\n  fieldLabel?: string;\n  type: string;\n  list: IContactFieldRow[];\n  addListItem: () => void;\n  removeListItem: (id: number) => void;\n  labelOptions: IOption[];\n  isSingle?: boolean;\n}\n\nconst ContactField: FC<IProps> = ({\n  fieldLabel,\n  addListItem,\n  removeListItem,\n  labelOptions,\n  type,\n  isSingle,\n  list\n}) => {\n  const renderRow = ({\n    id,\n    label,\n    value,\n    error,\n    onLabelChange,\n    onValueChange\n  }: IContactFieldRow) => {\n    return (\n      <ContactFieldRow\n        key={id}\n        id={id}\n        label={label}\n        labelOptions={labelOptions}\n        onRemove={removeListItem}\n        type={type}\n        value={value}\n        error={error}\n        isSingle={isSingle}\n        onLabelChange={onLabelChange}\n        onValueChange={onValueChange}\n      />\n    );\n  };\n  return (\n    <div className=\"contact-field\">\n      {fieldLabel && <span className=\"contact-field__label\">{fieldLabel}</span>}\n      {list.map(renderRow)}\n      <button\n        type=\"button\"\n        onClick={addListItem}\n        className=\"contact-field__add\"\n      >\n        + <span className=\"contact-field__add-label\">add one more</span>\n      </button>\n    </div>\n  );\n};\n\nexport default observer(ContactField);\n","import React, { FC } from \"react\";\nimport \"../TextField/textField.scss\";\nimport { IOption } from \"../Dropdown/Dropdown\";\nimport Select from \"../Dropdown/Select\";\n\ninterface IProps {\n  label?: string;\n  error?: string;\n  selected: string;\n  options: IOption[];\n  onSelect: (value: string) => void;\n  disabled?: boolean;\n  allowSearch?: boolean;\n}\n\nconst SelectField: FC<IProps> = ({\n  label,\n  error,\n  options,\n  disabled,\n  onSelect,\n  selected,\n  allowSearch\n}) => {\n  const haveError = !!error;\n  return (\n    <div className=\"text-field\">\n      {label && <span className=\"text-field__label\">{label}</span>}\n      <div className=\"text-field__input\">\n        <Select\n          selected={selected}\n          options={options}\n          onSelect={onSelect}\n          disabled={disabled}\n          haveError={haveError}\n          allowSearch={allowSearch}\n          fullWidth\n        />\n      </div>\n      {error && <p className=\"text-field__error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default SelectField;\n","import React, { FC, ChangeEvent, FormEvent } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useStore } from \"../../store/storeContext\";\nimport Modal from \"../Modal/Modal\";\nimport Button from \"../Button/Button\";\nimport TextField from \"../TextField/TextField\";\nimport ContactField from \"../ContactField/ContactField\";\nimport { IContactFieldRow } from \"../ContactField/ContactFieldRow\";\nimport { IOption } from \"../Dropdown/Dropdown\";\nimport SelectField from \"../SelectField/SelectField\";\n\ninterface IProps {\n  caption: string;\n  onSubmit: () => void;\n  onNameChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  name?: string;\n  nameError?: string;\n  organization: string;\n  organizationOptions: IOption[];\n  onOrganizationChange: (value: string) => void;\n  groups?: string;\n  onGroupsChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  assistant?: string;\n  onAssistantChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  emailFieldLabel?: string;\n  emailList: IContactFieldRow[];\n  addEmail: () => void;\n  removeEmail: (id: number) => void;\n  emailLabelOptions: IOption[];\n  singleEmail?: boolean;\n  phoneFieldLabel?: string;\n  phoneList: IContactFieldRow[];\n  addPhone: () => void;\n  removePhone: (id: number) => void;\n  phoneLabelOptions: IOption[];\n  singlePhone?: boolean;\n  onClose: () => void;\n  isPending: boolean;\n}\n\nexport const EDIT_PERSON_MODAL_ID = \"editPerson\";\n\nexport const EditPersonModal: FC<IProps> = ({\n  caption,\n  name,\n  nameError,\n  onNameChange,\n  organization,\n  organizationOptions,\n  onOrganizationChange,\n  groups,\n  onGroupsChange,\n  assistant,\n  onAssistantChange,\n  onSubmit,\n  emailFieldLabel,\n  emailList,\n  addEmail,\n  removeEmail,\n  emailLabelOptions,\n  singleEmail,\n  phoneFieldLabel,\n  phoneList,\n  phoneLabelOptions,\n  addPhone,\n  removePhone,\n  singlePhone,\n  onClose,\n  isPending\n}) => {\n  const handleSubmit = (e: FormEvent) => {\n    e && e.preventDefault();\n    onSubmit();\n  };\n  const handleClose = () => {\n    !isPending && onClose();\n  };\n  return (\n    <Modal\n      openOnInit\n      id={EDIT_PERSON_MODAL_ID}\n      caption={caption}\n      customCloseFunction={handleClose}\n    >\n      <form onSubmit={handleSubmit} className=\"modal-form\">\n        <div className=\"modal-content modal-padding\">\n          <TextField\n            autofocus\n            id=\"name\"\n            onChange={onNameChange}\n            value={name}\n            error={nameError}\n            label=\"Name\"\n          />\n          <SelectField\n            onSelect={onOrganizationChange}\n            options={organizationOptions}\n            selected={organization}\n            label=\"Organization\"\n            allowSearch\n          />\n          <TextField\n            id=\"assistant\"\n            onChange={onAssistantChange}\n            value={assistant}\n            label=\"Assistant\"\n          />\n          <ContactField\n            fieldLabel={emailFieldLabel}\n            type=\"email\"\n            labelOptions={emailLabelOptions}\n            list={emailList}\n            addListItem={addEmail}\n            removeListItem={removeEmail}\n            isSingle={singleEmail}\n          />\n          <ContactField\n            fieldLabel={phoneFieldLabel}\n            type=\"tel\"\n            labelOptions={phoneLabelOptions}\n            list={phoneList}\n            addListItem={addPhone}\n            removeListItem={removePhone}\n            isSingle={singlePhone}\n          />\n          <TextField\n            id=\"groups\"\n            onChange={onGroupsChange}\n            value={groups}\n            label=\"Groups\"\n          />\n        </div>\n        <div className=\"modal-footer\">\n          <div className=\"modal-footer__right\">\n            <Button isPending={isPending} primary onClick={onSubmit}>\n              Save\n            </Button>\n            <Button disabled={isPending} onClick={handleClose}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nconst EditPersonModalController: FC = () => {\n  const { peopleList } = useStore();\n  const { editPerson } = peopleList;\n  if (!editPerson) return null;\n  const {\n    caption,\n    name,\n    submit,\n    organization,\n    onOrganizationChange,\n    organizationOptions,\n    groups,\n    assistant,\n    emails,\n    phones,\n    handleClose,\n    isPending\n  } = editPerson;\n  return (\n    <EditPersonModal\n      caption={caption}\n      onSubmit={submit}\n      name={name.value}\n      onNameChange={name.onChange}\n      nameError={name.error}\n      organization={organization}\n      onOrganizationChange={onOrganizationChange}\n      organizationOptions={organizationOptions}\n      groups={groups.value}\n      onGroupsChange={groups.onChange}\n      assistant={assistant.value}\n      onAssistantChange={assistant.onChange}\n      emailFieldLabel={emails.fieldLabel}\n      // @ts-ignore\n      emailList={emails.list}\n      emailLabelOptions={emails.formattedLabelOptions}\n      addEmail={emails.addListItem}\n      removeEmail={emails.removeListItem}\n      singleEmail={emails.isSingle}\n      phoneFieldLabel={phones.fieldLabel}\n      // @ts-ignore\n      phoneList={phones.list}\n      phoneLabelOptions={phones.formattedLabelOptions}\n      addPhone={phones.addListItem}\n      removePhone={phones.removeListItem}\n      singlePhone={phones.isSingle}\n      onClose={handleClose}\n      isPending={isPending}\n    />\n  );\n};\n\nexport default observer(EditPersonModalController);\n","import { formatParams } from \"../utils\";\n\ninterface IApiRequest {\n  endpoint: string;\n  method?:\n    | \"GET\"\n    | \"POST\"\n    | \"PUT\"\n    | \"DELETE\"\n    | \"PATCH\"\n    | \"HEAD\"\n    | \"OPTIONS\"\n    | \"TRACE\";\n  params?: any;\n  body?: any;\n  signal?: AbortSignal;\n}\n\nconst apiRequest = async ({\n  endpoint,\n  method = \"GET\",\n  params,\n  body,\n  signal\n}: IApiRequest) => {\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const fetchOptions: any = {\n    method,\n    mode: \"cors\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: body ? JSON.stringify(body) : undefined,\n    signal\n  };\n  const paramsString = params ? `${formatParams(params)}&` : \"\";\n  const fullEndPoint = `${apiUrl}${endpoint}?${paramsString}api_token=${apiKey}`;\n  return await fetch(fullEndPoint, fetchOptions);\n};\n\nexport default apiRequest;\n","import {\n  Instance,\n  SnapshotIn,\n  types,\n  getRoot,\n  flow,\n  applySnapshot\n} from \"mobx-state-tree\";\nimport { IStore } from \"./main\";\nimport { formatKeys } from \"../utils\";\nimport apiRequest from \"./apiRequest\";\n\nconst OrganizationInfo = types.model(\"OrganizationInfoModel\", {\n  name: types.maybe(types.string),\n  address: types.maybe(types.string),\n  id: types.maybe(types.string)\n});\nconst Contact = types.model(\"ContactModel\", {\n  label: types.maybe(types.string),\n  value: types.maybe(types.string)\n});\ninterface IContact extends Instance<typeof Contact> {}\n\nconst getPrimaryContact = (source: IContact[]) => {\n  if (!source.length) return undefined;\n  return source[0].value;\n};\nconst getAdditionalContacts = (source: IContact[]) => {\n  if (!source.length) return undefined;\n  const notMain = source.slice(1, source.length);\n  if (!notMain.length) return undefined;\n  return notMain.map(item => item.value).join(\", \");\n};\n\nconst Person = types\n  .model(\"PersonModel\", {\n    id: types.identifier,\n    name: types.string,\n    assistant: types.maybe(types.string),\n    groups: types.maybe(types.string),\n    orderingId: types.maybe(types.number),\n    organizationInfo: types.maybe(OrganizationInfo),\n    phones: types.optional(types.array(Contact), []),\n    emails: types.optional(types.array(Contact), []),\n    pictureUrl: types.maybe(types.string),\n    incompleteData: false\n  })\n  .views(self => ({\n    get store(): IStore {\n      return getRoot(self);\n    },\n    get pendingDelete(): boolean {\n      return this.store.peopleList.pendingDelete;\n    },\n    get primaryPhone() {\n      return getPrimaryContact(self.phones);\n    },\n    get primaryEmail() {\n      return getPrimaryContact(self.emails);\n    },\n    get additionalEmails() {\n      return getAdditionalContacts(self.emails);\n    },\n    get additionalPhones() {\n      return getAdditionalContacts(self.phones);\n    },\n    get organization(): string {\n      return (self.organizationInfo && self.organizationInfo.name) || \"\";\n    },\n    get location(): string {\n      return (self.organizationInfo && self.organizationInfo.address) || \"\";\n    },\n    get searchQuery(): string {\n      return this.store.peopleList.searchQuery;\n    },\n    get validSearch(): boolean {\n      return this.store.peopleList.haveValidSearch;\n    }\n  }))\n  .actions(self => {\n    const requestDetails = flow(function*() {\n      const endpoint = `/persons/${self.id}`;\n      const response = yield apiRequest({ endpoint });\n      if (response && response.ok) {\n        const json = yield response.json();\n        const { data } = formatKeys(json);\n        return data;\n      }\n    });\n    const updateSelf = (snapshot: IPersonSnapshotIn) => {\n      try {\n        applySnapshot(self, snapshot);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const loadMissedData = flow(function*() {\n      const fullData = yield requestDetails();\n      if (!fullData) return;\n      updateSelf(fullData);\n    });\n    const setSelected = () => {\n      self.incompleteData && loadMissedData();\n      self.store.peopleList.showPersonDetails(self.id);\n    };\n    const closeDetails = () => {\n      self.store.peopleList.hidePeronDetailsDialog();\n    };\n    const editPerson = () => {\n      self.store.peopleList.openEditPersonModal(true);\n    };\n    const askForDeleteCurrentPerson = () => {\n      self.store.peopleList.askForDeleteCurrentPerson();\n    };\n    return {\n      setSelected,\n      closeDetails,\n      editPerson,\n      askForDeleteCurrentPerson\n    };\n  });\n\nexport interface IPerson extends Instance<typeof Person> {}\nexport interface IPersonSnapshotIn extends SnapshotIn<typeof Person> {}\nexport interface IPersonDumb extends IPersonSnapshotIn {\n  organization?: string;\n  location?: string;\n  primaryEmail?: string;\n  setSelected: () => void;\n  searchQuery?: string;\n  validSearch?: boolean;\n}\nexport default Person;\n","import { types, Instance, SnapshotIn, getParent } from \"mobx-state-tree\";\nimport { IPeopleList } from \"./PeopleList\";\n\nexport const DEFAULT_LIMIT = 10;\n\nconst Pagination = types\n  .model(\"PaginationModel\", {\n    limit: DEFAULT_LIMIT,\n    currentPage: 1\n  })\n  .views(self => ({\n    get peopleList(): IPeopleList {\n      return getParent(self, 1);\n    },\n    get total(): number {\n      return this.peopleList.totalCount;\n    },\n    get pagesCount(): number {\n      if (this.total === 0) return 1;\n      return Math.ceil(this.total / self.limit);\n    },\n    get currentStartIndex(): number {\n      return (self.currentPage - 1) * self.limit;\n    },\n    get onTheFirstPage(): boolean {\n      return self.currentPage === 0;\n    },\n    get onTheLastPage(): boolean {\n      return self.currentPage === this.pagesCount;\n    },\n    get currentMaxCount(): number {\n      return self.currentPage * self.limit;\n    }\n  }))\n  .actions(self => {\n    const setCurrentPage = (pageId: number) => {\n      self.currentPage = pageId;\n    };\n    const goToPage = (pageId: number) => {\n      setCurrentPage(pageId);\n      const start = (pageId - 1) * self.limit;\n      const inCache = self.peopleList.getFromCache(pageId);\n      if (!inCache) {\n        self.peopleList.getList(start);\n      }\n    };\n    // for the case we've deleted last item on the page\n    const goToPrev = () => {\n      const prev = self.currentPage - 1;\n      if (prev < 1) return;\n      goToPage(prev);\n    };\n    return {\n      goToPage,\n      goToPrev\n    };\n  });\n\nexport interface IPagination extends Instance<typeof Pagination> {}\nexport interface IPaginationSnapshotIn extends SnapshotIn<typeof Pagination> {}\nexport default Pagination;\n","import { Instance, SnapshotIn, types } from \"mobx-state-tree\";\nimport { ChangeEvent } from \"react\";\nimport Validator from \"validatorjs\";\n\nconst INPUT_TYPES: string[] = [\"text\", \"email\", \"tel\"];\n\nexport const rules = {\n  email: \"email|min:3\",\n  text: \"string\",\n  name: \"required|string|max:60\",\n  tel: \"string|regex:/^[^A-ZA-z]*$/g\"\n};\n\nconst Input = types\n  .model(\"InputModel\", {\n    id: types.identifier,\n    name: types.maybe(types.string),\n    label: types.maybe(types.string),\n    value: \"\",\n    error: types.maybe(types.string),\n    customRules: types.maybe(types.string),\n    inputType: types.optional(\n      types.enumeration(\"InputType\", INPUT_TYPES),\n      \"text\"\n    ),\n    isDirty: false\n  })\n  .actions(self => {\n    const setDirty = () => {\n      self.isDirty = true;\n    };\n    const setValue = (value: string) => {\n      self.value = value;\n      self.error = \"\";\n    };\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n      !self.isDirty && setDirty();\n      setValue(e.target.value);\n    };\n    const setError = (error: string) => {\n      self.error = error;\n    };\n\n    const validate = () => {\n      const validation = new Validator(\n        { [self.id]: self.value },\n        // @ts-ignore\n        { [self.id]: self.customRules || rules[self.inputType] }\n      );\n      const isValid = validation.passes();\n      const error = validation.errors.first(self.id);\n      error && setError(error);\n      return isValid;\n    };\n\n    const reset = () => {\n      self.value = \"\";\n      self.error = \"\";\n      self.isDirty = false;\n    };\n    return {\n      setValue,\n      onChange,\n      setError,\n      validate,\n      reset\n    };\n  });\n\nexport interface IInput extends Instance<typeof Input> {}\nexport interface IInputSnapshotIn extends SnapshotIn<typeof Input> {}\nexport default Input;\n","import {\n  types,\n  applySnapshot,\n  Instance,\n  SnapshotIn,\n  getParent\n} from \"mobx-state-tree\";\nimport { ChangeEvent } from \"react\";\nimport Validator from \"validatorjs\";\nimport { rules } from \"./Input\";\nimport { IOption } from \"../components/Dropdown/Dropdown\";\nimport { capitalize } from \"../utils\";\n\nconst DEFAULT_LABEL = \"work\";\n\nconst ContactItem = types\n  .model(\"ContactItem\", {\n    id: types.identifierNumber,\n    value: \"\",\n    error: types.maybe(types.string),\n    label: DEFAULT_LABEL\n  })\n  .views(self => ({\n    get list(): IContactModel {\n      return getParent(self, 2);\n    },\n    get type(): string {\n      return this.list.type;\n    },\n    get name(): string {\n      return this.list.fieldLabel.toLocaleLowerCase();\n    }\n  }))\n  .actions(self => {\n    const setError = (error: string) => {\n      self.error = error;\n    };\n    const onValueChange = (e: ChangeEvent<HTMLInputElement>) => {\n      !self.list.isDirty && self.list.setDirty();\n      self.value = e.target.value;\n      self.error = \"\";\n    };\n    const onLabelChange = (value: string) => {\n      !self.list.isDirty && self.list.setDirty();\n      self.label = value;\n    };\n    const validate = () => {\n      const validation = new Validator(\n        { [self.name]: self.value },\n        // @ts-ignore\n        { [self.name]: rules[self.type] }\n      );\n      const isValid = validation.passes();\n      // @ts-ignore\n      const error = validation.errors.first(self.name);\n      error && setError(error);\n      return isValid;\n    };\n    return {\n      onValueChange,\n      onLabelChange,\n      validate\n    };\n  });\n\nexport interface IContactItem extends Instance<typeof ContactItem> {}\nexport interface IContactItemSnapshotIn\n  extends SnapshotIn<typeof ContactItem> {}\n\nconst ContactModel = types\n  .model(\"ContactModel\", {\n    fieldLabel: types.string,\n    counter: 0,\n    type: types.enumeration(\"InputTypes\", [\"string\", \"tel\", \"email\"]),\n    labelOptions: types.array(types.string),\n    list: types.optional(types.array(ContactItem), [{ id: 0 }]),\n    isDirty: false\n  })\n  .views(self => ({\n    get isSingle(): boolean {\n      return self.list.length === 1;\n    },\n    get formattedLabelOptions(): IOption[] {\n      return self.labelOptions.map(option => ({\n        value: option,\n        label: capitalize(option)\n      }));\n    }\n  }))\n  .actions(self => {\n    const incrementCounter = () => {\n      self.counter += 1;\n    };\n    const addListItem = () => {\n      incrementCounter();\n      self.list.push({ id: self.counter });\n    };\n    const removeListItem = (id: number) => {\n      const filtered = self.list.filter(item => item.id !== id);\n      try {\n        applySnapshot(self.list, filtered);\n      } catch (e) {\n        console.error(e); //eslint-disable-line no-console\n      }\n    };\n    const validate = () => {\n      const isValid = self.list.map(item => item.validate());\n      return isValid.every(item => item === true);\n    };\n    const setDirty = () => {\n      self.isDirty = true;\n    };\n    const getValue = () => {\n      const rawValue: IContactItemSnapshotIn[] = self.list.toJSON();\n      const formattedValue = rawValue\n        .filter(item => item.value)\n        .map(({ value, label }, index) => ({\n          value,\n          label,\n          primary: index === 0\n        }));\n      return formattedValue;\n    };\n    return {\n      addListItem,\n      removeListItem,\n      validate,\n      setDirty,\n      getValue\n    };\n  });\n\nexport interface IContactModel extends Instance<typeof ContactModel> {}\nexport interface IContactModelSnapshotIn\n  extends SnapshotIn<typeof ContactModel> {}\nexport default ContactModel;\n","import { types, getParent, Instance, SnapshotIn } from \"mobx-state-tree\";\n\nimport { IUi } from \"./Ui\";\n\nexport enum NOTIFICATION_TYPES {\n  ERROR = \"error\",\n  SUCCESS = \"success\"\n}\nexport interface INotificationProps {\n  type: NOTIFICATION_TYPES;\n  text: string;\n}\n\nconst Notification = types\n  .model(\"Notification\", {\n    id: types.identifierNumber,\n    type: types.enumeration(\"NotificationTypes\", [\n      NOTIFICATION_TYPES.ERROR,\n      NOTIFICATION_TYPES.SUCCESS\n    ]),\n    text: \"\",\n    isHidden: false,\n    autoClose: true,\n    timeout: 5000\n  })\n  .views(self => ({\n    get ui(): IUi {\n      return getParent(self, 2);\n    }\n  }))\n  .actions(self => ({\n    destroy() {\n      self.isHidden = true;\n      setTimeout(() => {\n        self.ui.destroyNotification(self.id);\n      }, 500);\n    },\n    afterCreate() {\n      if (self.autoClose) {\n        setTimeout(this.destroy, self.timeout);\n      }\n    }\n  }));\n\nexport interface INotification extends Instance<typeof Notification> {}\nexport interface INotificationSnapshotIn\n  extends SnapshotIn<typeof Notification> {}\nexport interface INotificationDumb extends INotificationSnapshotIn {\n  destroy: () => void;\n}\nexport default Notification;\n","import { getRoot, Instance, SnapshotIn, types } from \"mobx-state-tree\";\nimport { IStore } from \"./main\";\nimport Input, { IInput, rules } from \"./Input\";\nimport ContactModel from \"./ContactModel\";\nimport { IWarningModelSnapshotIn, WARNING_ACTIONS } from \"./WarningModel\";\nimport { IOption } from \"../components/Dropdown/Dropdown\";\n\nconst DEFAULT_LABEL = \"work\";\n\nconst PHONE_LABELS = [DEFAULT_LABEL, \"home\", \"mobile\", \"other\"];\nconst EMAIL_LABELS = [DEFAULT_LABEL, \"home\", \"other\"];\n\nconst INPUT_KEYS = [\"name\", \"groups\", \"assistant\"];\nconst CONTACTS_KEYS = [\"emails\", \"phones\"];\nconst ALL_FIELDS_KEYS = [...INPUT_KEYS, ...CONTACTS_KEYS];\n\nexport interface IEditPersonValues {\n  name?: string;\n  groups?: string;\n  assistant?: string;\n  orderingId?: string;\n}\nexport interface IContactValues {\n  value: string;\n  label: string;\n  primary?: boolean;\n}\n\nexport interface IPersonRequestBody {\n  name?: string;\n  organization?: string;\n  location?: string;\n  groups?: string;\n  assistant?: string;\n  emails?: IContactValues[];\n  phones?: IContactValues[];\n}\n\nconst nameInput = {\n  id: \"name\",\n  name: \"name\",\n  customRules: rules.name\n};\nconst groupsInput = {\n  id: \"groups\"\n};\nconst assistantInput = {\n  id: \"assistant\"\n};\n\nconst emailModel = {\n  fieldLabel: \"Email\",\n  type: \"email\",\n  labelOptions: EMAIL_LABELS,\n  list: [{ id: 0 }]\n};\n\nconst phoneModel = {\n  fieldLabel: \"Phone\",\n  type: \"tel\",\n  labelOptions: PHONE_LABELS,\n  list: [{ id: 0 }]\n};\n\nconst DEFAULT_ORG_OPTION = {\n  value: \"none\",\n  label: \"(not selected)\"\n};\n\nconst EditPerson = types\n  .model(\"EditPersonModel\", {\n    isEditMode: false,\n    caption: \"Add person\",\n    id: types.maybe(types.string),\n    orderingId: types.maybe(types.number),\n    name: types.optional(Input, nameInput),\n    organization: DEFAULT_ORG_OPTION.value,\n    groups: types.optional(Input, groupsInput),\n    assistant: types.optional(Input, assistantInput),\n    emails: types.optional(ContactModel, emailModel),\n    phones: types.optional(ContactModel, phoneModel),\n    isPending: false\n  })\n  .views(self => ({\n    get store(): IStore {\n      return getRoot(self);\n    },\n    get validationKeys(): string[] {\n      return [\"name\", ...CONTACTS_KEYS];\n    },\n    get inputKeys(): string[] {\n      return ALL_FIELDS_KEYS;\n    },\n    get isClear(): boolean {\n      if (self.isEditMode) return false;\n      // ignore phone and email for this case\n      // @ts-ignore\n      const values = this.inputKeys.map(key => self[key].value);\n      return values.every(item => !item);\n    },\n    get isDirty(): boolean {\n      // @ts-ignore\n      const dirtyFields = this.inputKeys.map(key => self[key].isDirty);\n      return dirtyFields.some(item => item === true);\n    },\n    get shouldBlockClose(): boolean {\n      if (self.isEditMode) {\n        return this.isDirty;\n      }\n      return !this.isClear;\n    },\n    get organizationOptions(): IOption[] {\n      return [DEFAULT_ORG_OPTION, ...this.store.organizationsList.options];\n    }\n  }))\n  .actions(self => {\n    const setPendingStatus = (status: boolean) => {\n      self.isPending = status;\n    };\n    const validate = () => {\n      const validationResult = self.validationKeys.map(key => {\n        // @ts-ignore\n        return self[key].validate();\n      });\n      return validationResult.every(item => item === true);\n    };\n    const setValues = (values: IEditPersonValues) => {\n      const keys = Object.keys(values);\n      keys.forEach(key => {\n        // @ts-ignore\n        if (values[key] !== undefined) {\n          // @ts-ignore\n          self[key].value = values[key];\n        }\n      });\n    };\n    const setContact = (model: \"phones\" | \"emails\", list: IContactValues[]) => {\n      const snapshot: any = list.map(\n        ({ value, label }: IContactValues, index) => ({\n          id: index,\n          value,\n          label\n        })\n      );\n      self[model].list = snapshot;\n    };\n    const setPhones = (list: IContactValues[]) => {\n      setContact(\"phones\", list);\n    };\n    const setEmails = (list: IContactValues[]) => {\n      setContact(\"emails\", list);\n    };\n    const showCloseWarning = () => {\n      const warning: IWarningModelSnapshotIn = {\n        text:\n          \"Are you sure you want to close this form without saving? All changes will be lost\",\n        confirmText: \"Yes, close form\",\n        cancelText: \"No, stay here\",\n        confirmAction: WARNING_ACTIONS.CLOSE_EDIT_PERSON_FORM\n      };\n      self.store.ui.showWarningDialog(warning);\n    };\n    const close = () => {\n      self.store.peopleList.closeEditPersonModal();\n    };\n    const handleClose = () => {\n      if (self.isPending) return;\n      self.shouldBlockClose ? showCloseWarning() : close();\n    };\n    const onOrganizationChange = (value: string) => {\n      self.organization = value;\n    };\n    const getFieldValues = (): IPersonRequestBody => {\n      const data: any = {};\n      self.inputKeys.forEach(key => {\n        // @ts-ignore\n        const input: IInput = self[key];\n        if (input.isDirty && input.value !== undefined) {\n          data[key] = input.value;\n        }\n      });\n      CONTACTS_KEYS.forEach(key => {\n        // @ts-ignore\n        const value = self[key].getValue();\n        if (value && value.length) {\n          data[key] = value;\n        }\n      });\n      if (self.organization !== DEFAULT_ORG_OPTION.value) {\n        data.organizationInfo = self.organization;\n      }\n      if (self.orderingId) {\n        data.orderingId = self.orderingId;\n      }\n      return data;\n    };\n    const submit = () => {\n      const isValid = validate();\n      if (!isValid) return;\n      const data = getFieldValues();\n      const { updateSelectedPerson, createNewPerson } = self.store.peopleList;\n      self.isEditMode ? updateSelectedPerson(data) : createNewPerson(data);\n    };\n    return {\n      setPendingStatus,\n      onOrganizationChange,\n      submit,\n      setValues,\n      setPhones,\n      setEmails,\n      handleClose\n    };\n  });\n\nexport interface IEditPerson extends Instance<typeof EditPerson> {}\nexport interface IEditPersonSnapshotIn extends SnapshotIn<typeof EditPerson> {}\nexport default EditPerson;\n","import {\n  applySnapshot,\n  destroy,\n  flow,\n  getRoot,\n  getSnapshot,\n  Instance,\n  SnapshotIn,\n  types\n} from \"mobx-state-tree\";\nimport { PERSON_DETAILS_MODAL_ID } from \"../components/PersonDetailsModal/PersonDetailsModal\";\nimport { formatKeys, searchStringIgnoreCase } from \"../utils\";\nimport { EDIT_PERSON_MODAL_ID } from \"../components/EditPersonModal/EditPersonModal\";\nimport { IStore } from \"./main\";\nimport Person, { IPerson, IPersonSnapshotIn } from \"./Person\";\nimport Pagination from \"./Pagination\";\nimport EditPerson, {\n  IContactValues,\n  IEditPerson,\n  IEditPersonSnapshotIn,\n  IEditPersonValues,\n  IPersonRequestBody\n} from \"./EditPerson\";\nimport apiRequest from \"./apiRequest\";\nimport { IWarningModelSnapshotIn, WARNING_ACTIONS } from \"./WarningModel\";\nimport { ChangeEvent } from \"react\";\n\ninterface IPersonChangeProps {\n  id?: string;\n  isEdit: boolean;\n  body: IPersonRequestBody;\n}\n\nconst ListCache = types\n  .model(\"ListCacheModel\", {\n    pageId: types.number,\n    content: types.array(Person)\n  })\n  .actions(self => {\n    const updateList = (list: IPersonSnapshotIn[]) => {\n      try {\n        applySnapshot(self.content, list);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    return {\n      updateList\n    };\n  });\n\nexport interface IListCache extends Instance<typeof ListCache> {}\nexport interface IListCacheSnapshotIn extends SnapshotIn<typeof ListCache> {}\n\nconst PeopleList = types\n  .model(\"PeopleListModel\", {\n    defaultCaption: \"People list\",\n    addLabel: \"Add person\",\n    cache: types.array(ListCache),\n    searchResult: types.array(Person),\n    isLoadingList: true,\n    isLoadingAdditionalItems: false,\n    selectedPerson: types.maybe(types.reference(Person)),\n    editPerson: types.maybe(EditPerson),\n    pagination: types.optional(Pagination, {}),\n    pendingDelete: false,\n    totalCount: 0,\n    searchQuery: \"\"\n  })\n  .views(self => ({\n    get store(): IStore {\n      return getRoot(self);\n    },\n    get caption(): string {\n      if (!this.haveValidSearch) return self.defaultCaption;\n      return `Search result for \"${self.searchQuery}\"`;\n    },\n    getFromCache(pageId: number): IListCache | undefined {\n      return self.cache.find(fragment => fragment.pageId === pageId);\n    },\n    get currentListFragment() {\n      return self.cache.find(\n        fragment => fragment.pageId === self.pagination.currentPage\n      );\n    },\n    get list(): IPerson[] {\n      if (this.haveValidSearch) {\n        return this.totalSearchResult;\n      }\n      if (!this.currentListFragment) {\n        return [];\n      }\n      return this.currentListFragment.content;\n    },\n    get allItems(): IPerson[] {\n      const allContent: IPerson[][] = self.cache.map(\n        fragment => fragment.content\n      );\n      return allContent.flat();\n    },\n    get isEmpty(): boolean {\n      if (!this.haveValidSearch) {\n        return !self.isLoadingList && !this.allItems.length;\n      }\n      return !self.isLoadingAdditionalItems && !this.totalSearchResult.length;\n    },\n    get shouldAddToEnd(): boolean {\n      if (this.haveValidSearch) return false;\n      return (\n        self.pagination.onTheLastPage &&\n        this.list.length < self.pagination.limit\n      );\n    },\n    get haveValidSearch(): boolean {\n      return self.searchQuery.length > 2;\n    },\n    get allItemsByQuery(): IPerson[] {\n      if (!this.haveValidSearch) return [];\n      return this.allItems.filter(item =>\n        searchStringIgnoreCase(self.searchQuery, item.name)\n      );\n    },\n    get itemsByQueryIds(): string[] {\n      return this.allItemsByQuery.map(item => item.id);\n    },\n    get totalSearchResult(): IPerson[] {\n      return [...this.allItemsByQuery, ...self.searchResult];\n    },\n    get canFillCurrentFragment(): boolean {\n      return (\n        !self.pagination.onTheLastPage &&\n        !this.haveValidSearch &&\n        self.pagination.currentMaxCount < self.totalCount\n      );\n    }\n  }))\n  .actions(self => {\n    let getListController: AbortController | undefined;\n    let searchListController: AbortController | undefined;\n    let handleSearchTimeout: number | null = null;\n\n    // total count\n    const setTotalCount = (count: number) => {\n      self.totalCount = count;\n    };\n\n    // detail dialog related stuff\n    const setSelectedPerson = (id: string) => {\n      try {\n        // @ts-ignore MST design issue\n        self.selectedPerson = id;\n      } catch (e) {\n        console.error(e);\n        self.store.ui.addErrorNotification(\n          \"Congratulations! You got an error I can't reproduce 😫\"\n        );\n      }\n    };\n    const clearSelectedPerson = () => {\n      self.selectedPerson = undefined;\n    };\n    const showPersonDetails = (id: string) => {\n      setSelectedPerson(id);\n      self.store.ui.openModal(PERSON_DETAILS_MODAL_ID);\n    };\n    const hidePeronDetailsDialog = flow(function*(): any {\n      yield self.store.ui.closeModal(PERSON_DETAILS_MODAL_ID);\n      clearSelectedPerson();\n    });\n\n    // change loading states\n    const setLoadingListState = (newState: boolean) => {\n      self.isLoadingList = newState;\n    };\n    const setLoadingAdditionalItemsState = (newState: boolean) => {\n      self.isLoadingAdditionalItems = newState;\n    };\n\n    // list, pagination and cache actions\n    const addListCache = (snapshot: IPersonSnapshotIn[]) => {\n      const fragment: IListCacheSnapshotIn = {\n        content: snapshot,\n        pageId: self.pagination.currentPage\n      };\n      try {\n        self.cache.push(fragment);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const setCache = (snapshot: IListCacheSnapshotIn[]) => {\n      try {\n        applySnapshot(self.cache, snapshot);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const getListData = flow(function*(\n      from: number = 0,\n      limit: number = self.pagination.limit\n    ): any {\n      getListController && getListController.abort();\n      getListController = AbortController && new AbortController();\n      const endpoint = \"/persons\";\n      try {\n        const params = { from, limit };\n        const response = yield apiRequest({\n          endpoint,\n          params,\n          signal: getListController.signal\n        });\n        if (response && response.ok) {\n          const json = yield response.json();\n          return formatKeys(json);\n        }\n      } catch (e) {\n        if (e.code !== 20) {\n          // 20 is ok, request was aborted\n          console.error(e);\n          self.store.ui.addErrorNotification(\"Unable to load People list\");\n        }\n      }\n    });\n    const getList = flow(function*(\n      from: number = 0,\n      limit: number = self.pagination.limit\n    ) {\n      setLoadingListState(true);\n      const listData = yield getListData(from, limit);\n      setLoadingListState(false);\n      if (!listData) return;\n      const { persons, count } = listData;\n      setTotalCount(count);\n      addListCache(persons);\n    });\n    const clearNextPages = () => {\n      const pagesToSave = self.cache.filter(\n        page => page.pageId <= self.pagination.currentPage\n      );\n      setCache(pagesToSave);\n    };\n    const clearLastPage = () => {\n      const notLastPages = self.cache.filter(\n        page => page.pageId !== self.pagination.pagesCount\n      );\n      setCache(notLastPages);\n    };\n\n    // drag and drop\n\n    const sendReorderRequest = (personId: string, newOrder: number) => {\n      const endpoint = `/persons/${personId}`;\n      const body = { orderingId: newOrder };\n      return apiRequest({ endpoint, method: \"PUT\", body });\n    };\n    const onDragEnd = (sourceIndex: number, destinationIndex: number) => {\n      const list = [...self.list];\n      /*\n      Code below maybe seems overweight\n      Something like\n      list.splice(sourceIndex, 1);\n      list.splice(destinationIndex, 0, draggableId);\n      seems much easier\n      But if we need to store order via custom property, we need to be tricky\n      And we need to send PUT\t/persons/{id} request for each of person in range we changed order\n      If send just new order position for one element we can't guarantee net time order will be saved\n      Inside the application, I fond a way to edit multiple entries with /persons\n      and body like {ids: [303, 304, 305], data: {name: 'Abc'}} but this is impossible to\n      pass multiple values related to ids.\n      So we can save sort just before we get request limitation (impossible to save correct sort for\n      around 100 items, we will get 429 error)\n       */\n      const minIndex = Math.min(sourceIndex, destinationIndex);\n      const maxIndex = Math.max(sourceIndex, destinationIndex);\n      const listStart = list.slice(0, minIndex);\n      const listEnd = list.slice(maxIndex + 1, list.length);\n      let affectedArea: IPerson[] = list.slice(minIndex, maxIndex + 1);\n      let prevValidOrderId = (list[minIndex] && list[minIndex].orderingId) || 1;\n      if (sourceIndex > destinationIndex) {\n        const targetItem = affectedArea.pop();\n        if (targetItem) {\n          affectedArea = [targetItem, ...affectedArea];\n        }\n      } else {\n        const [targetItem, ...rest] = affectedArea;\n        affectedArea = [...rest, targetItem];\n      }\n      let timeout = 0;\n      affectedArea.forEach(item => {\n        item.orderingId = prevValidOrderId;\n        prevValidOrderId += 1;\n        setTimeout(() => {\n          sendReorderRequest(item.id, item.orderingId as number);\n        }, timeout); // Timeout is for not to get 429 error\n        // yeah, terrible solution, in real world we will need to edit multiple entries in one request\n        timeout += 60;\n      });\n      const newList = [...listStart, ...affectedArea, ...listEnd];\n      self.currentListFragment && self.currentListFragment.updateList(newList);\n    };\n\n    // edit / add / delete person actions\n\n    const changeSinglePersonInList = (\n      id: string,\n      snapshot: IPersonSnapshotIn\n    ) => {\n      const person = self.list.find(person => person.id === id);\n      if (!person) return;\n      try {\n        applySnapshot(person, snapshot);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const addSinglePersonToList = (person: IPersonSnapshotIn) => {\n      try {\n        if (!self.currentListFragment || !person) return;\n        const newList = [...self.currentListFragment.content, person];\n        applySnapshot(self.currentListFragment.content, newList);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const getSinglePerson = flow(function*() {\n      const from = self.pagination.currentStartIndex + self.list.length;\n      setLoadingAdditionalItemsState(true);\n      const res = yield getListData(from, 1);\n      setLoadingAdditionalItemsState(false);\n      if (!res) {\n        return;\n      }\n      try {\n        addSinglePersonToList(res.persons[0]);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    const requestPersonChange = flow(function*({\n      id,\n      isEdit,\n      body\n    }: IPersonChangeProps) {\n      const method = isEdit ? \"PUT\" : \"POST\";\n      const endpoint = isEdit ? `/persons/${id}` : \"/persons\";\n      const formattedBody = formatKeys(body, false);\n      return yield apiRequest({ endpoint, method, body: formattedBody });\n    });\n    const setEditPersonModel = (isEditMode: boolean) => {\n      if (!isEditMode) {\n        self.editPerson = {\n          orderingId: self.totalCount ? self.totalCount + 1 : undefined\n        } as IEditPerson;\n        return;\n      }\n      if (!self.selectedPerson) return;\n      const {\n        name,\n        orderingId,\n        groups,\n        id,\n        emails,\n        phones,\n        assistant,\n        organizationInfo\n      } = self.selectedPerson;\n      const snap: IEditPersonSnapshotIn = {\n        isEditMode: true,\n        id,\n        caption: `Edit person: ${name}`,\n        orderingId\n      };\n      if (organizationInfo && organizationInfo.id) {\n        snap.organization = `${organizationInfo.id}`;\n      }\n      self.editPerson = snap as IEditPerson;\n      const values: IEditPersonValues = {\n        name,\n        groups,\n        assistant\n      };\n      self.editPerson.setValues(values);\n      if (emails.length) {\n        const email = getSnapshot(emails);\n        self.editPerson.setEmails(email as IContactValues[]);\n      }\n      if (phones.length) {\n        const phone = getSnapshot(phones);\n        self.editPerson.setPhones(phone as IContactValues[]);\n      }\n    };\n    const openEditPersonModal = (isEditMode: boolean = false) => {\n      setEditPersonModel(isEditMode);\n      self.store.ui.openModal(EDIT_PERSON_MODAL_ID);\n    };\n    const closeEditPersonModal = flow(function*(): any {\n      yield self.store.ui.closeModal(EDIT_PERSON_MODAL_ID);\n      self.editPerson && destroy(self.editPerson);\n    });\n    const setPendingDelete = (status: boolean) => {\n      self.pendingDelete = status;\n    };\n    const sendDeletePersonRequest = (personId: string) => {\n      const endpoint = `/persons/${personId}`;\n      return apiRequest({ endpoint, method: \"DELETE\" });\n    };\n    const askForDeleteCurrentPerson = () => {\n      if (!self.selectedPerson) return;\n      const warning: IWarningModelSnapshotIn = {\n        text: `Are you sure you want to delete ${self.selectedPerson.name}?`,\n        confirmText: \"Yes, proceed\",\n        confirmAction: WARNING_ACTIONS.DELETE_CURRENT_PERSON\n      };\n      self.store.ui.showWarningDialog(warning);\n    };\n\n    const deleteCurrentPerson = flow(function*(): any {\n      if (!self.selectedPerson) return;\n      const { id } = self.selectedPerson;\n      setPendingDelete(true);\n      const res = yield sendDeletePersonRequest(id);\n      setPendingDelete(false);\n      if (!res) {\n        self.store.ui.addErrorNotification(\"Delete request failed\");\n        return;\n      }\n      yield hidePeronDetailsDialog();\n      const inSearch =\n        self.haveValidSearch && self.searchResult.find(item => item.id === id);\n      if (inSearch) {\n        const filtered = self.searchResult.filter(item => item.id !== id);\n        setSearchResults(filtered);\n      } else {\n        if (\n          self.currentListFragment &&\n          self.currentListFragment.content.length\n        ) {\n          const filtered = self.currentListFragment.content.filter(\n            item => item.id !== id\n          );\n          self.currentListFragment.updateList(filtered);\n          if (self.canFillCurrentFragment) {\n            getSinglePerson();\n          }\n          clearNextPages();\n        } else {\n          self.pagination.goToPrev();\n        }\n      }\n      setTotalCount(self.totalCount - 1);\n      self.store.ui.addSuccessNotification(\"Person was deleted\");\n    });\n\n    const updateSelectedPerson = flow(function*(body: IPersonRequestBody) {\n      if (!self.selectedPerson) return;\n      const { id } = self.selectedPerson;\n      self.editPerson && self.editPerson.setPendingStatus(true);\n      const response = yield requestPersonChange({ id, isEdit: true, body });\n      self.editPerson && self.editPerson.setPendingStatus(false);\n      if (!response || !response.ok) {\n        self.store.ui.addErrorNotification(\"Update request failed\");\n        return;\n      }\n      try {\n        const json = yield response.json();\n        const data = formatKeys(json);\n        changeSinglePersonInList(id, data);\n        self.store.ui.addSuccessNotification(\"Person changed\");\n        closeEditPersonModal();\n      } catch (e) {\n        console.error(e);\n        self.store.ui.addErrorNotification(\n          \"An error encountered in updating a person\"\n        );\n      }\n    });\n\n    const createNewPerson = flow(function*(body: IPersonRequestBody) {\n      self.editPerson && self.editPerson.setPendingStatus(true);\n      const response = yield requestPersonChange({ isEdit: false, body });\n      self.editPerson && self.editPerson.setPendingStatus(false);\n      if (!response || !response.ok) {\n        self.store.ui.addErrorNotification(\"Create person request failed\");\n        return;\n      }\n      try {\n        const json = yield response.json();\n        const data = formatKeys(json);\n        if (self.shouldAddToEnd) {\n          addSinglePersonToList(data);\n          setTotalCount(self.totalCount + 1);\n        } else {\n          setTotalCount(self.totalCount + 1);\n          clearLastPage();\n        }\n        self.store.ui.addSuccessNotification(\"Person added\");\n        closeEditPersonModal();\n      } catch (e) {\n        console.error(e);\n        self.store.ui.addErrorNotification(\n          \"An error encountered in creating a person\"\n        );\n      }\n    });\n\n    // search\n    const setSearchResults = (result: IPersonSnapshotIn[]) => {\n      const onlyNewItems = result.filter(\n        item => !self.itemsByQueryIds.includes(item.id)\n      );\n      try {\n        applySnapshot(self.searchResult, onlyNewItems);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const sendSearchRequest = flow(function*(): any {\n      searchListController && searchListController.abort();\n      searchListController = AbortController && new AbortController();\n      const endpoint = \"/persons/find\";\n      const params = {\n        name: self.searchQuery,\n        skip: 0,\n        limit: 500\n      };\n      try {\n        const response = yield apiRequest({\n          endpoint,\n          params,\n          signal: searchListController.signal\n        });\n        if (response.ok) {\n          const json = yield response.json();\n          return formatKeys(json);\n        }\n      } catch (e) {\n        if (e.code !== 20) {\n          // 20 is ok, request was aborted\n          console.error(e);\n        }\n      }\n    });\n    const setSearchQuery = (query: string) => {\n      self.searchQuery = query;\n    };\n    const clearSearchQuery = () => {\n      setSearchQuery(\"\");\n      setSearchResults([]);\n    };\n\n    const requestClearList = flow(function*() {\n      const endpoint = `/delete-all-persons`;\n      return yield apiRequest({ endpoint, method: \"DELETE\" });\n    });\n\n    const reloadList = flow(function*() {\n      setCache([]);\n      setSearchResults([]);\n      yield getList();\n    });\n\n    const clearWholeList = flow(function*() {\n      setLoadingListState(true);\n      const result = yield requestClearList();\n      if (!result.ok) {\n        setLoadingListState(false);\n        self.store.ui.addErrorNotification(\"Unable to clear list\");\n        return;\n      }\n      yield reloadList();\n    });\n\n    const requestRestoreDefault = flow(function*() {\n      const endpoint = `/restore-default-data`;\n      return yield apiRequest({ endpoint, method: \"POST\" });\n    });\n\n    const restoreDefaultData = flow(function*() {\n      setLoadingListState(true);\n      const result = yield requestRestoreDefault();\n      if (!result.ok) {\n        setLoadingListState(false);\n        self.store.ui.addErrorNotification(\"Unable to restore default data\");\n        return;\n      }\n      yield reloadList();\n    });\n\n    // life-cycle hook\n    const afterAttach = () => {\n      getList();\n    };\n\n    return {\n      getList,\n      afterAttach,\n      onDragEnd,\n      showPersonDetails,\n      hidePeronDetailsDialog,\n      openEditPersonModal,\n      closeEditPersonModal,\n      askForDeleteCurrentPerson,\n      deleteCurrentPerson,\n      updateSelectedPerson,\n      createNewPerson,\n      clearSearchQuery,\n      // to provide debounce via setTimeout, this actions must be a properties of action object and can't be private\n      performSearch: flow(function*() {\n        setLoadingAdditionalItemsState(true);\n        const result = yield sendSearchRequest();\n        setLoadingAdditionalItemsState(false);\n        result && setSearchResults(result);\n      }),\n      handleSearchInputChange(e: ChangeEvent<HTMLInputElement>) {\n        setSearchQuery(e.target.value);\n        if (!self.haveValidSearch) return;\n        if (handleSearchTimeout) clearTimeout(handleSearchTimeout);\n        handleSearchTimeout = window.setTimeout(() => {\n          this.performSearch();\n        }, 200);\n      },\n      clearWholeList,\n      restoreDefaultData\n    };\n  });\n\nexport interface IPeopleList extends Instance<typeof PeopleList> {}\nexport interface IPeopleListSnapshotIn extends SnapshotIn<typeof PeopleList> {}\nexport default PeopleList;\n","import { types, getParent, Instance } from \"mobx-state-tree\";\nimport { IUi } from \"./Ui\";\n\nconst Modal = types\n  .model(\"ModalModel\", {\n    id: types.identifier,\n    isClosing: false,\n    isOpen: false\n  })\n  .views(self => ({\n    get ui(): IUi {\n      return getParent(self, 2);\n    },\n    get isTopLevel(): boolean {\n      return this.ui.topModalId === self.id;\n    },\n    get shouldReactOnEsc(): boolean {\n      return this.isTopLevel && this.isTopLevel && !this.ui.dropdownIsOpen;\n    }\n  }))\n  .actions(self => ({\n    delayedClose() {\n      self.isClosing = false;\n      self.isOpen = false;\n    },\n    open() {\n      self.isOpen = true;\n      self.isClosing = false;\n    },\n    close() {\n      self.isClosing = true;\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.delayedClose();\n          // here we returning promise to possibility to execute operation really after it closed with animation\n          resolve();\n        }, 250);\n      });\n    }\n  }));\n\nexport interface IModal extends Instance<typeof Modal> {}\nexport default Modal;\n","import { Context, createContext, useContext } from \"react\";\n\nimport Store, { IStore } from \"./main\";\n\nlet StoresContext: Context<IStore>;\n\nexport const createStore = () => {\n  const store: IStore = Store.create({});\n  StoresContext = createContext(store);\n  if (process.env.NODE_ENV === \"development\") {\n    // @ts-ignore\n    window.store = store; // for debug\n  }\n};\n\nexport const useStore = (): IStore => useContext(StoresContext);\n","import React, { FC } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Button from \"../Button/Button\";\nimport \"./warningModal.scss\";\nimport { useStore } from \"../../store/storeContext\";\nimport { observer } from \"mobx-react\";\n\ninterface IProps {\n  text?: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nexport const WARNING_MODAL_ID = \"warning-modal\";\n\nexport const WarningModal: FC<IProps> = ({\n  text,\n  onConfirm,\n  onCancel,\n  confirmText = \"Ok\",\n  cancelText = \"Cancel\"\n}) => {\n  return (\n    <Modal\n      id={WARNING_MODAL_ID}\n      openOnInit\n      hideHeader\n      customCloseFunction={onCancel}\n    >\n      <div className=\"modal-content\">\n        <div className=\"warning-container\">\n          <div className=\"warning-container__image\" role=\"img\" />\n          <div className=\"warning-container__text\">{text}</div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <div className=\"modal-footer__right\">\n          <Button primary onClick={onConfirm}>\n            {confirmText}\n          </Button>\n          <Button onClick={onCancel}>{cancelText}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nconst WarningModalController: FC = () => {\n  const { ui } = useStore();\n  const { warning } = ui;\n  if (!warning) return null;\n  const {\n    text,\n    confirmAction,\n    confirmText,\n    cancelAction,\n    cancelText,\n    handleAction\n  } = warning;\n  const onConfirm = () => {\n    handleAction(confirmAction);\n  };\n  const onCancel = () => {\n    handleAction(cancelAction);\n  };\n  return (\n    <WarningModal\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      text={text}\n      cancelText={cancelText}\n      confirmText={confirmText}\n    />\n  );\n};\n\nexport default observer(WarningModalController);\n","import {\n  applySnapshot,\n  destroy,\n  flow,\n  Instance,\n  types,\n  cast\n} from \"mobx-state-tree\";\nimport Modal, { IModal } from \"./Modal\";\nimport Notification, {\n  INotification,\n  INotificationProps,\n  NOTIFICATION_TYPES\n} from \"./Notification\";\nimport WarningModel, { IWarningModelSnapshotIn } from \"./WarningModel\";\nimport { WARNING_MODAL_ID } from \"../components/WarningModal/WarningModal\";\n\nconst DISABLED_SCROLL_CL_NAME = \"disable-scroll\";\n\nconst Ui = types\n  .model(\"UiModel\", {\n    modals: types.array(Modal),\n    notifications: types.array(Notification),\n    dropdownIsOpen: false, // prop to avoid close modal on Esc if custom dropdown is opened\n    openedModals: types.array(types.string), // LIFO-like struct to know what which modal is on top level (but not actually last can out first)\n    warning: types.maybe(WarningModel),\n    notificationsCount: 0\n  })\n  .views(self => ({\n    getModal(id: string): IModal | undefined {\n      return self.modals.find(modal => id === modal.id);\n    },\n    get topModalId(): string | undefined {\n      return self.openedModals[self.openedModals.length - 1];\n    },\n    get haveOpenedPopups(): boolean {\n      return !!self.openedModals.length;\n    },\n    getNotification(id: number): INotification | undefined {\n      return self.notifications.find(notification => notification.id === id);\n    }\n  }))\n  .actions(self => {\n    const disableBodyScroll = () => {\n      document.body.classList.add(DISABLED_SCROLL_CL_NAME);\n    };\n    const enableBodyScroll = () => {\n      document.body.classList.remove(DISABLED_SCROLL_CL_NAME);\n    };\n    const registerOpenedModal = (id: string) => {\n      self.openedModals.push(id);\n    };\n    const unregisterOpenedModal = (id: string) => {\n      const updated = self.openedModals.filter(item => item !== id);\n      applySnapshot(self.openedModals, updated);\n    };\n    const addModal = (id: string) => {\n      if (self.getModal(id)) return;\n      self.modals.push({ id });\n    };\n    const removeModal = (id: string) => {\n      const cleared = self.modals.filter(modal => modal.id !== id);\n      applySnapshot(self.modals, cleared);\n    };\n    const openModal = (id: string) => {\n      const modal = self.getModal(id);\n      if (modal) {\n        modal.open();\n        registerOpenedModal(id);\n        disableBodyScroll();\n      }\n    };\n    const closeModal = flow(function*(id: string): any {\n      const modal: IModal | undefined = self.getModal(id);\n      if (modal) {\n        yield modal.close();\n        unregisterOpenedModal(id);\n        !self.openedModals.length && enableBodyScroll();\n      }\n    });\n    const onDropdownOpen = () => {\n      self.dropdownIsOpen = true;\n      !self.haveOpenedPopups && disableBodyScroll();\n    };\n    const onDropdownClose = () => {\n      self.dropdownIsOpen = false;\n      !self.haveOpenedPopups && enableBodyScroll();\n    };\n    const setWarning = (snapshot: IWarningModelSnapshotIn) => {\n      try {\n        self.warning = cast(snapshot);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const showWarningDialog = (snapshot: IWarningModelSnapshotIn) => {\n      setWarning(snapshot);\n      openModal(WARNING_MODAL_ID);\n    };\n    const hideWarningDialog = flow(function*(): any {\n      yield closeModal(WARNING_MODAL_ID);\n    });\n    const addNotification = ({ type, text }: INotificationProps) => {\n      self.notifications.push({ id: self.notificationsCount, type, text });\n      self.notificationsCount += 1;\n    };\n    const addSuccessNotification = (text: string) => {\n      addNotification({ text, type: NOTIFICATION_TYPES.SUCCESS });\n    };\n    const addErrorNotification = (text: string) => {\n      addNotification({ text, type: NOTIFICATION_TYPES.ERROR });\n    };\n    const destroyNotification = (id: number) => {\n      const notification = self.getNotification(id);\n      notification && destroy(notification);\n    };\n    return {\n      addModal,\n      removeModal,\n      openModal,\n      closeModal,\n      onDropdownOpen,\n      onDropdownClose,\n      showWarningDialog,\n      hideWarningDialog,\n      addSuccessNotification,\n      addErrorNotification,\n      destroyNotification\n    };\n  });\n\nexport interface IUi extends Instance<typeof Ui> {}\nexport default Ui;\n","import {\n  applySnapshot,\n  flow,\n  Instance,\n  SnapshotIn,\n  types\n} from \"mobx-state-tree\";\nimport { formatKeys } from \"../utils\";\nimport apiRequest from \"./apiRequest\";\nimport { IOption } from \"../components/Dropdown/Dropdown\";\n\nconst Organization = types.model(\"OrganizationModel\", {\n  id: types.identifier,\n  name: types.string\n});\n\nexport interface IOrganization extends Instance<typeof Organization> {}\nexport interface IOrganizationSnapshotIn\n  extends SnapshotIn<typeof Organization> {}\n\nconst OrganizationsList = types\n  .model(\"OrganizationsLIst\", {\n    list: types.optional(types.array(Organization), [])\n  })\n  .views(self => ({\n    get options(): IOption[] {\n      return self.list.map(item => ({\n        value: `${item.id}`,\n        label: item.name\n      }));\n    }\n  }))\n  .actions(self => {\n    const setList = (snapshot: IOrganization[]) => {\n      try {\n        applySnapshot(self.list, snapshot);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    const requestList = flow(function*() {\n      const endpoint = \"/organizations\";\n      const params = {\n        start: 0,\n        limit: 10000,\n        sort: \"name\"\n      };\n      return yield apiRequest({ endpoint, params });\n    });\n    const getList = flow(function*() {\n      try {\n        const response = yield requestList();\n        if (!response || !response.ok) {\n          return;\n        }\n        const json = yield response.json();\n        const data = formatKeys(json);\n        setList(data);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    const afterAttach = () => {\n      getList();\n    };\n    return {\n      afterAttach\n    };\n  });\n\nexport interface IOrganizationsList\n  extends Instance<typeof OrganizationsList> {}\nexport interface IOrganizationsListSnapshotIn\n  extends SnapshotIn<typeof OrganizationsList> {}\n\nexport default OrganizationsList;\n","import { Instance, types } from \"mobx-state-tree\";\nimport PeopleList from \"./PeopleList\";\nimport Ui from \"./Ui\";\nimport OrganizationsList from \"./OrganizationsList\";\n\nconst Store = types.model(\"MainStore\", {\n  peopleList: types.optional(PeopleList, {}),\n  organizationsList: types.optional(OrganizationsList, {}),\n  ui: types.optional(Ui, {})\n});\n\nexport interface IStore extends Instance<typeof Store> {}\nexport default Store;\n","import React, { FC } from \"react\";\nimport \"./header.scss\";\n\nconst Header: FC = () => (\n  <header className=\"app-header\">\n    <a href=\"/\" className=\"app-header__link\">\n      <h1 className=\"app-header__logo\">\n        <span className=\"visually-hidden\">Company name was here</span>\n      </h1>\n    </a>\n  </header>\n);\n\nexport default Header;\n","import React, { FC } from \"react\";\nimport \"./footer.scss\";\n\nconst Footer: FC = () => (\n  <footer className=\"app-footer\">Pointless footer here</footer>\n);\n\nexport default Footer;\n","import React, { FC, SyntheticEvent } from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  Draggable,\n  DraggableProvided,\n  DraggableStateSnapshot\n} from \"react-beautiful-dnd\";\nimport \"./peoplelistItem.scss\";\nimport { getBemClassName } from \"../../utils\";\nimport Avatar from \"../Avatar/Avatar\";\nimport MatchedSearch from \"../MatchedSearch/MatchedSearch\";\n\nexport interface IPeopleListItem {\n  id: string;\n  index: number;\n  name: string;\n  imageUrl?: string;\n  organization?: string;\n  setSelected: () => void;\n  searchQuery?: string;\n  validSearch?: boolean;\n}\n\nconst PeopleListItem: FC<IPeopleListItem> = ({\n  id,\n  index,\n  name,\n  imageUrl,\n  organization,\n  setSelected,\n  searchQuery,\n  validSearch\n}) => {\n  const handleClick = (e: SyntheticEvent) => {\n    e && e.preventDefault();\n    setSelected();\n  };\n  const handleSpacePress = (e: KeyboardEvent) => {\n    if (e.code === \"Space\") {\n      e && e.preventDefault();\n      setSelected();\n    }\n  };\n  const onFocus = () => {\n    document.addEventListener(\"keypress\", handleSpacePress);\n  };\n  const onBlur = () => {\n    document.removeEventListener(\"keypress\", handleSpacePress);\n  };\n  const query = validSearch ? searchQuery : \"\";\n  return (\n    <Draggable key={id} draggableId={`${id}`} index={index}>\n      {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => {\n        const { isDragging } = snapshot;\n        return (\n          <li\n            className={getBemClassName(\"people-list-item\", { isDragging })}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div\n              className={getBemClassName(\"people-list-item__drag\", {\n                isHidden: validSearch\n              })}\n              {...provided.dragHandleProps}\n            />\n            <a\n              href={`#${id}`}\n              onClick={handleClick}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              role=\"button\"\n              className={getBemClassName(\"people-list-item__button\", {\n                isOnly: validSearch\n              })}\n            >\n              <div className=\"people-list-item__left\">\n                <p className=\"people-list-item-name\">\n                  <MatchedSearch\n                    value={name}\n                    query={query}\n                    matchedClassName=\"people-list-item-name__matched-search\"\n                  />\n                </p>\n                {organization && (\n                  <p className=\"people-list-item-org\">{organization}</p>\n                )}\n              </div>\n              <div className=\"people-list-item__right\">\n                <Avatar name={name} imageUrl={imageUrl} />\n              </div>\n            </a>\n          </li>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nexport default observer(PeopleListItem);\n","import React, { FC } from \"react\";\nimport \"./pagination.scss\";\nimport { getBemClassName } from \"../../utils\";\n\ninterface IProps {\n  isActive?: boolean;\n  text: string;\n  pageId: number;\n  onClick: (id: number) => void;\n  disabled?: boolean;\n  isPrev?: boolean;\n  isNext?: boolean;\n}\n\nconst PaginationButton: FC<IProps> = ({\n  isActive,\n  onClick,\n  text,\n  pageId,\n  disabled,\n  isNext,\n  isPrev\n}) => {\n  const handleClick = () => {\n    !isActive && onClick(pageId);\n  };\n  const isArrow = isNext || isPrev;\n  return (\n    <li\n      className={getBemClassName(\"pagination__item\", {\n        isActive,\n        isPrev,\n        isNext\n      })}\n    >\n      <button\n        onClick={handleClick}\n        disabled={disabled}\n        className={getBemClassName(\"pagination__button\", {\n          isActive,\n          isPrev,\n          isNext\n        })}\n      >\n        <span className={isArrow ? \"visually-hidden\" : undefined}>{text}</span>\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","import React, { FC } from \"react\";\nimport PaginationButton from \"./PaginationButton\";\nimport \"./pagination.scss\";\n\nexport interface IPaginationProps {\n  total: number;\n  pagesCount: number;\n  currentPage: number;\n  onPaginationClick: (pageID: number) => void;\n}\n\nconst Pagination: FC<IPaginationProps> = ({\n  total,\n  pagesCount,\n  onPaginationClick,\n  currentPage\n}) => {\n  const prevDisabled = currentPage < 2;\n  const nextDisabled = currentPage >= pagesCount;\n  const pages: number[] = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  const renderItem = (pageId: number) => {\n    return (\n      <PaginationButton\n        key={pageId}\n        pageId={pageId}\n        onClick={onPaginationClick}\n        text={`${pageId}`}\n        isActive={pageId === currentPage}\n      />\n    );\n  };\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        <PaginationButton\n          text=\"Prev\"\n          isPrev\n          onClick={onPaginationClick}\n          pageId={currentPage - 1}\n          disabled={prevDisabled}\n        />\n        {pages.map(renderItem)}\n        <PaginationButton\n          text=\"Next\"\n          isNext\n          onClick={onPaginationClick}\n          pageId={currentPage + 1}\n          disabled={nextDisabled}\n        />\n      </ul>\n      <p className=\"pagination__total\">Total: {total}</p>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { ChangeEvent, FC, FormEvent } from \"react\";\nimport { TextInput } from \"../TextField/TextField\";\nimport \"./toolbarSearch.scss\";\n\nexport interface IToolbarSearchProps {\n  searchQuery?: string;\n  onSearchInputChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSearchClear: () => void;\n}\n\nexport const ToolbarSearch: FC<IToolbarSearchProps> = ({\n  searchQuery,\n  onSearchInputChange,\n  onSearchClear\n}) => {\n  const handleSubmit = (e: FormEvent) => {\n    e && e.preventDefault();\n  };\n  const handleReset = (e: FormEvent) => {\n    e && e.preventDefault();\n    onSearchClear();\n  };\n  return (\n    <form onSubmit={handleSubmit} onReset={handleReset} className=\"search-bar\">\n      <TextInput\n        id=\"Search\"\n        value={searchQuery}\n        onChange={onSearchInputChange}\n        placeholder=\"Search by name\"\n      />\n      <button type=\"reset\" className=\"search-bar__clear\" title=\"Clear\" />\n    </form>\n  );\n};\n\nexport default ToolbarSearch;\n","import React, { FC, Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  DragDropContext,\n  Droppable,\n  DropResult,\n  DroppableProvided,\n  DroppableStateSnapshot\n} from \"react-beautiful-dnd\";\nimport \"./listView.scss\";\nimport { getBemClassName } from \"../../utils\";\nimport { IPersonDumb } from \"../../store/Person\";\nimport LoaderOverlay from \"../LoaderOverlay/LoaderOverlay\";\nimport PeopleListItem from \"../PeopleListItem/PeopleListItem\";\nimport Button from \"../Button/Button\";\nimport Pagination, { IPaginationProps } from \"../Pagination/Pagination\";\nimport ToolbarSearch, {\n  IToolbarSearchProps\n} from \"../ToolbarSearch/ToobarSearch\";\nimport Spinner from \"../Spinner/Spinner\";\n\ninterface IProps {\n  caption: string;\n  isLoadingList?: boolean;\n  isLoadingAdditionalItems?: boolean;\n  isEmpty?: boolean;\n  list: IPersonDumb[];\n  onDragEnd: (sourceIndex: number, destinationIndex: number) => void;\n  onAddClick: () => void;\n  clearWholeList: () => void;\n  restoreDefaultData: () => void;\n  addLabel: string;\n  isSearchMode?: boolean;\n}\n\ninterface IList {\n  list: IPersonDumb[];\n}\n\nconst List: FC<IList> = observer(({ list }) => {\n  const renderItem = (\n    {\n      name,\n      id,\n      organization,\n      setSelected,\n      pictureUrl,\n      searchQuery,\n      validSearch\n    }: IPersonDumb,\n    index: number\n  ) => (\n    <PeopleListItem\n      id={id}\n      key={id}\n      index={index}\n      name={name}\n      organization={organization}\n      setSelected={setSelected}\n      imageUrl={pictureUrl}\n      searchQuery={searchQuery}\n      validSearch={validSearch}\n    />\n  );\n  return <Fragment>{list.map(renderItem)}</Fragment>;\n});\n\nexport const ListView: FC<IProps & IPaginationProps & IToolbarSearchProps> = ({\n  caption,\n  isLoadingList,\n  isLoadingAdditionalItems,\n  isEmpty,\n  list,\n  onDragEnd,\n  onAddClick,\n  addLabel,\n  total,\n  pagesCount,\n  onPaginationClick,\n  currentPage,\n  searchQuery,\n  onSearchClear,\n  onSearchInputChange,\n  isSearchMode,\n  clearWholeList,\n  restoreDefaultData\n}) => {\n  const handleDragEnd = ({ destination, source }: DropResult) => {\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    onDragEnd(source.index, destination.index);\n  };\n  return (\n    <main className=\"view-container\">\n      <header className=\"view-header\">\n        <h2 className=\"view-caption\">{caption}</h2>\n      </header>\n      <div className=\"toolbar\">\n        <div className=\"toolbar__left\">\n          <Button primary onClick={onAddClick}>\n            {addLabel}\n          </Button>\n          <ToolbarSearch\n            onSearchInputChange={onSearchInputChange}\n            onSearchClear={onSearchClear}\n            searchQuery={searchQuery}\n          />\n          <Button\n            collapsible\n            icon=\"delete\"\n            disabled={isLoadingList}\n            onClick={clearWholeList}\n          >\n            Clear all\n          </Button>\n          <Button\n            collapsible\n            icon=\"restore\"\n            disabled={isLoadingList}\n            onClick={restoreDefaultData}\n          >\n            Restore defaults\n          </Button>\n        </div>\n        <div className=\"toolbar__right\">\n          {!isSearchMode && (\n            <Pagination\n              total={total}\n              onPaginationClick={onPaginationClick}\n              currentPage={currentPage}\n              pagesCount={pagesCount}\n            />\n          )}\n        </div>\n      </div>\n      <div className={getBemClassName(\"view-content\", { isEmpty })}>\n        {isLoadingList && <LoaderOverlay />}\n        {isEmpty && (\n          <div className=\"view-content__empty-message\">\n            {isSearchMode ? \"No items found\" : \"This list is empty\"}\n          </div>\n        )}\n        {!isEmpty && (\n          <DragDropContext onDragEnd={handleDragEnd}>\n            <Droppable droppableId=\"list\">\n              {(\n                provided: DroppableProvided,\n                snapshot: DroppableStateSnapshot\n              ) => (\n                <ul\n                  className=\"view-content__list\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <List list={list} />\n                  {provided.placeholder}\n                  {isLoadingAdditionalItems && (\n                    <li className=\"view-content__list-placeholder\">\n                      <Spinner small />\n                    </li>\n                  )}\n                </ul>\n              )}\n            </Droppable>\n          </DragDropContext>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default ListView;\n","import React, { FC } from \"react\";\nimport { observer } from \"mobx-react\";\nimport ListView from \"./ListView\";\nimport { useStore } from \"../../store/storeContext\";\n\nconst PeopleListView: FC = () => {\n  const { peopleList } = useStore();\n  const {\n    isLoadingList,\n    isLoadingAdditionalItems,\n    caption,\n    isEmpty,\n    list,\n    onDragEnd,\n    addLabel,\n    openEditPersonModal,\n    pagination,\n    searchQuery,\n    handleSearchInputChange,\n    clearSearchQuery,\n    haveValidSearch,\n    clearWholeList,\n    restoreDefaultData\n  } = peopleList;\n  const { total, goToPage, pagesCount, currentPage } = pagination;\n  return (\n    <ListView\n      isSearchMode={haveValidSearch}\n      caption={caption}\n      isLoadingList={isLoadingList}\n      isLoadingAdditionalItems={isLoadingAdditionalItems}\n      isEmpty={isEmpty}\n      list={list}\n      onDragEnd={onDragEnd}\n      onAddClick={openEditPersonModal}\n      addLabel={addLabel}\n      total={total}\n      onPaginationClick={goToPage}\n      currentPage={currentPage}\n      pagesCount={pagesCount}\n      searchQuery={searchQuery}\n      onSearchInputChange={handleSearchInputChange}\n      onSearchClear={clearSearchQuery}\n      clearWholeList={clearWholeList}\n      restoreDefaultData={restoreDefaultData}\n    />\n  );\n};\n\nexport default observer(PeopleListView);\n","import React, { FC, Fragment } from \"react\";\nimport PersonDetailsModal from \"../PersonDetailsModal/PersonDetailsModal\";\nimport EditPersonModal from \"../EditPersonModal/EditPersonModal\";\nimport WarningModal from \"../WarningModal/WarningModal\";\n\nconst TopLevelModals: FC = () => (\n  <Fragment>\n    <PersonDetailsModal />\n    <EditPersonModal />\n    <WarningModal />\n  </Fragment>\n);\n\nexport default TopLevelModals;\n","import React, { FC } from \"react\";\nimport { NOTIFICATION_TYPES } from \"../../store/Notification\";\nimport \"./notifications.scss\";\nimport { getBemClassName } from \"../../utils\";\n\nexport interface INotificationProps {\n  type: NOTIFICATION_TYPES;\n  isHidden?: boolean;\n  text?: string;\n}\n\nconst Notification: FC<INotificationProps> = ({\n  type,\n  isHidden,\n  text,\n}) => {\n  const clName = \"notification\";\n  return (\n    <li\n      className={`${getBemClassName(clName, { isHidden })} ${clName}_${type}`}\n    >\n      <span className={`notification__icon notification__icon_${type}`} />\n      <p className=\"notification__text\">{text}</p>\n    </li>\n  );\n};\n\nexport default Notification;\n","import React, { FC } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { observer } from \"mobx-react\";\nimport \"./notifications.scss\";\nimport Notification from \"./Notification\";\nimport { INotificationDumb } from \"../../store/Notification\";\nimport { useStore } from \"../../store/storeContext\";\n\nconst ROOT_ID = \"dropdown-root\";\n\ninterface IProps {\n  list: INotificationDumb[];\n}\n\nexport const NotificationContainer: FC<IProps> = observer(({ list }) => {\n  const renderItems = ({\n    type,\n    text,\n    id,\n    isHidden\n  }: INotificationDumb) => {\n    return (\n      <Notification\n        key={id}\n        type={type}\n        text={text}\n        isHidden={isHidden}\n      />\n    );\n  };\n  const template = (\n    <ul className=\"notifications-list\">{list.map(renderItems)}</ul>\n  );\n  const root = document.getElementById(ROOT_ID);\n  if (!root) return null;\n  return createPortal(template, root);\n});\n\nconst NotificationContainerController: FC = () => {\n  const { ui } = useStore();\n  const { notifications } = ui;\n  return <NotificationContainer list={notifications} />;\n};\n\nexport default observer(NotificationContainerController);\n","import React, { FC } from \"react\";\nimport \"./styles/common.scss\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport PeopleListView from \"./components/PeopleListView/PeopleListView\";\nimport TopLevelModals from \"./components/TopLevelModals/TopLevelModals\";\nimport NotificationContainer from \"./components/NotificationsContainer/NotificationsContainer\";\n\nconst App: FC = () => {\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <PeopleListView />\n      <Footer />\n      <TopLevelModals />\n      <NotificationContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"./store/storeContext\";\nimport App from \"./App\";\n\ncreateStore();\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}